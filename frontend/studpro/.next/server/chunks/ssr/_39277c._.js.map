{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/routes.ts"],"sourcesContent":["const Routes={\n    LOGIN:'http://localhost:3001/authentication/login',\n    REGISTER:'http://localhost:3001/authentication/register',\n    AUTHORED_PROBLEMS:'http://localhost:3001/dashboard/authoredProblems',\n    PROBLEM_LEVEL_DASHBOARD_CHARTS:'http://localhost:3001/dashboard/getProblemLevelDashboardCharts',\n    MONTHLY_SOLVED_PROBLEMS:'http://localhost:3001/dashboard/getMonthlySolvedProblems',\n    FLOW_CHART:'http://localhost:3001/flowchart/convertToflowchart',\n    PROBLEM_DATA:'http://localhost:3001/extractProblem/problemData',\n    CHANGE_PROGRAM:'http://localhost:3001/problemCompile/changeProgram',\n    COMPILE_AND_RUN:'http://localhost:3001/problemCompile/compileandrun',\n    SUBMIT:'http://localhost:3001/problemCompile/submit',\n    UPLOAD_FILE:'http://localhost:3001/problemCreation/uploadFile',\n    CREATE_PROBLEM:'http://localhost:3001/problemCreation/createProblem',\n    GET_USER:'http://localhost:3001/users/getUser',\n    UPDATE_USER:'http://localhost:3001/users/updateUser',\n    LEADERBOARD:'http://localhost:3001/leaderboard/getLeaderboard',\n}\nexport default Routes;"],"names":[],"mappings":";;;AAAA,MAAM,SAAO;IACT,OAAM;IACN,UAAS;IACT,mBAAkB;IAClB,gCAA+B;IAC/B,yBAAwB;IACxB,YAAW;IACX,cAAa;IACb,gBAAe;IACf,iBAAgB;IAChB,QAAO;IACP,aAAY;IACZ,gBAAe;IACf,UAAS;IACT,aAAY;IACZ,aAAY;AAChB;uCACe"}},
    {"offset": {"line": 28, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 34, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/app/flowchart/hooks/flowchartHook.tsx"],"sourcesContent":["import { javascript } from \"@codemirror/lang-javascript\";\nimport { python } from \"@codemirror/lang-python\";\nimport { css } from \"@codemirror/lang-css\";\nimport { html } from \"@codemirror/lang-html\";\nimport { sql } from \"@codemirror/lang-sql\";\nimport { markdown } from \"@codemirror/lang-markdown\";\nimport { json } from \"@codemirror/lang-json\";\nimport { cpp } from \"@codemirror/lang-cpp\";\nimport { java } from \"@codemirror/lang-java\";\nimport { csharp } from \"@replit/codemirror-lang-csharp\";\nimport { convertCodeToFlowTree, convertFlowTreeToSvg } from \"js2flowchart\";\nimport { useState, useRef, useEffect } from \"react\";\nimport Routes from \"../../../routes\";\n\nexport function FlowchartHook() {\n  const [code, setCode] = useState(\"\");\n  const [geminiCode, setGeminicode] = useState(\"\");\n  const [flowchartSvg, setFlowchartSvg] = useState<string | null>(null);\n  const svgRef = useRef<HTMLDivElement>(null);\n  const languages = {\n    javascript: { name: \"JavaScript\", extension: javascript() },\n    python: { name: \"Python\", extension: python() },\n    css: { name: \"CSS\", extension: css() },\n    html: { name: \"HTML\", extension: html() },\n    sql: { name: \"SQL\", extension: sql() },\n    markdown: { name: \"Markdown\", extension: markdown() },\n    json: { name: \"JSON\", extension: json() },\n    cpp: { name: \"C/C++\", extension: cpp() },\n    java: { name: \"Java\", extension: java() },\n    csharp: { name: \"C#\", extension: csharp() },\n  };\n  useEffect(() => {\n    if (geminiCode) {\n      const flowTree = convertCodeToFlowTree(geminiCode);\n      const svg = convertFlowTreeToSvg(flowTree);\n      setFlowchartSvg(svg);\n    }\n  }, [geminiCode]);\n  const gemini = () => {\n    const url = Routes.FLOW_CHART;\n\n    const data = {\n      code: code,\n    };\n\n    try {\n      fetch(url, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          'Authorization': `Bearer ${localStorage.getItem('access_token')}`,\n        },\n        body: JSON.stringify(data),\n      })\n        .then((response) =>\n          response.json().then((data) => {\n            console.log(data);\n            if(data.message == 'Unauthorized' && data.statusCode == 401){\n              localStorage.removeItem('access_token');\n              window.location.href = '/authentication';\n          }\n            \n            setGeminicode(data.actualOutput);\n          })\n        )\n        .catch((error) => console.error(\"Error:\", error));\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleCodeChange = (value: string) => {\n    setCode(value);\n  };\n\n  const handleRunCode = () => {\n    gemini();\n  };\n\n  const handleDownloadSVG = () => {\n    if (svgRef.current) {\n      const svgData = new XMLSerializer().serializeToString(svgRef.current);\n      const svgBlob = new Blob([svgData], {\n        type: \"image/svg+xml;charset=utf-8\",\n      });\n      const svgUrl = URL.createObjectURL(svgBlob);\n      const downloadLink = document.createElement(\"a\");\n      downloadLink.href = svgUrl;\n      downloadLink.download = \"flowchart.svg\";\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n      URL.revokeObjectURL(svgUrl);\n    }\n  };\n  return {\n    languages,\n    code,\n    flowchartSvg,\n    svgRef,\n    handleCodeChange,\n    handleRunCode,\n    handleDownloadSVG,\n  };\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 178, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 184, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/app/flowchart/component/codeEditor.tsx"],"sourcesContent":["'use client'\n\nimport React from 'react'\nimport CodeMirror from '@uiw/react-codemirror'\nimport { FlowchartHook } from '../hooks/flowchartHook'\n\n\nexport default function CodeEditor() {\n    const {\n        code,\n        flowchartSvg,\n        svgRef,\n        handleCodeChange,\n        handleRunCode,\n        handleDownloadSVG } = FlowchartHook();\n        \n    return (\n        <div className=\"flex flex-col h-full p-8\">\n            <h1 className=\"text-2xl italic\">Code Editor</h1>\n            <div className=\"flex-grow\">\n                <CodeMirror\n                    value={code}\n                    height=\"200px\"\n                    onChange={handleCodeChange}\n                />\n            </div>\n            <button onClick={handleRunCode} className=\"mt-4 p-2 bg-blue-500 text-white rounded\">\n                Run Code\n            </button>\n            <button onClick={handleDownloadSVG} className=\"mt-4 p-2 bg-green-500 text-white rounded\">\n                Download SVG\n            </button>\n            <div className=\"mt-4\">\n            \n                {flowchartSvg && (\n                    <div dangerouslySetInnerHTML={{ __html: flowchartSvg }} ref={svgRef} />\n                )} \n             </div>\n        </div>\n    )\n}"],"names":[],"mappings":";;;;AAGA;AACA;AADA;AAHA;;;;AAOe,SAAS;IACpB,MAAM,EACF,IAAI,EACJ,YAAY,EACZ,MAAM,EACN,gBAAgB,EAChB,aAAa,EACb,iBAAiB,EAAE,GAAG,CAAA,GAAA,2IAAA,CAAA,gBAAa,AAAD;IAEtC,qBACI,8OAAC;QAAI,WAAU;;0BACX,8OAAC;gBAAG,WAAU;0BAAkB;;;;;;0BAChC,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC,4KAAA,CAAA,UAAU;oBACP,OAAO;oBACP,QAAO;oBACP,UAAU;;;;;;;;;;;0BAGlB,8OAAC;gBAAO,SAAS;gBAAe,WAAU;0BAA0C;;;;;;0BAGpF,8OAAC;gBAAO,SAAS;gBAAmB,WAAU;0BAA2C;;;;;;0BAGzF,8OAAC;gBAAI,WAAU;0BAEV,8BACG,8OAAC;oBAAI,yBAAyB;wBAAE,QAAQ;oBAAa;oBAAG,KAAK;;;;;;;;;;;;;;;;;AAKjF"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/app/flowchart/page.tsx"],"sourcesContent":["/* eslint-disable react-hooks/rules-of-hooks */\n'use client'\n\nimport { useRouter } from 'next/navigation';\nimport MultiLanguageCodeEditor from \"./component/codeEditor\";\nimport { useEffect } from 'react';\n\n\nexport default function flowChart(){\n    const router = useRouter();\n      useEffect(() => {\n        if (typeof window !== 'undefined') {\n          if (localStorage.getItem('access_token') == null) {\n            router.push('/authentication');\n          }\n        }\n      }, [router]);\n    return(\n        <div>\n            <MultiLanguageCodeEditor/>\n        </div>\n    )\n}"],"names":[],"mappings":"AAAA,6CAA6C;;;;AAG7C;AACA;AACA;AAJA;;;;;AAOe,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACrB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAAmC;;QAInC;IACF,GAAG;QAAC;KAAO;IACb,qBACI,8OAAC;kBACG,cAAA,8OAAC,4IAAA,CAAA,UAAuB;;;;;;;;;;AAGpC"}},
    {"offset": {"line": 305, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}