{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/language/dist/index.js"],"sourcesContent":["import { NodeProp, IterMode, Tree, TreeFragment, Parser, NodeType, NodeSet } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState, countColumn, combineConfig, RangeSet, RangeSetBuilder, Prec } from '@codemirror/state';\nimport { ViewPlugin, logException, EditorView, Decoration, WidgetType, gutter, GutterMarker, Direction } from '@codemirror/view';\nimport { tags, tagHighlighter, highlightTree, styleTags } from '@lezer/highlight';\nimport { StyleModule } from 'style-mod';\n\nvar _a;\n/**\nNode prop stored in a parser's top syntax node to provide the\nfacet that stores language-specific data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nSyntax node prop used to register sublanguages. Should be added to\nthe top level node type for the language.\n*/\nconst sublanguageProp = /*@__PURE__*/new NodeProp();\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. The class\ncan be used directly, via the [`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage)\nsubclass for [Lezer](https://lezer.codemirror.net/) LR parsers, or\nvia the [`StreamLanguage`](https://codemirror.net/6/docs/ref/#language.StreamLanguage) subclass\nfor stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. If you need to invoke this\n    directly, first define a data facet with\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet), and then\n    configure your parser to [attach](https://codemirror.net/6/docs/ref/#language.languageDataProp) it\n    to the language's outer syntax node.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) facet\n    used for this language.\n    */\n    data, parser, extraExtensions = [], \n    /**\n    A language name.\n    */\n    name = \"\") {\n        this.data = data;\n        this.name = name;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => {\n                let top = topNodeAt(state, pos, side), data = top.type.prop(languageDataProp);\n                if (!data)\n                    return [];\n                let base = state.facet(data), sub = top.type.prop(sublanguageProp);\n                if (sub) {\n                    let innerNode = top.resolve(pos - top.from, side);\n                    for (let sublang of sub)\n                        if (sublang.test(innerNode, state)) {\n                            let data = state.facet(sublang.facet);\n                            return sublang.type == \"replace\" ? data : data.concat(base);\n                        }\n                }\n                return base;\n            })\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return topNodeAt(state, pos, side).type.prop(languageDataProp) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction topNodeAt(state, pos, side) {\n    let topLang = state.facet(language), tree = syntaxTree(state).topNode;\n    if (!topLang || topLang.allowsNesting) {\n        for (let node = tree; node; node = node.enter(pos, side, IterMode.ExcludeBuffers))\n            if (node.type.isTop)\n                tree = node;\n    }\n    return tree;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser, name) {\n        super(data, parser, [], name);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }), spec.name);\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser and optionally a new name.\n    */\n    configure(options, name) {\n        return new LRLanguage(this.data, this.parser.configure(options), name || this.name);\n    }\n    get allowsNesting() { return this.parser.hasWrappers(); }\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of the active\n[language](https://codemirror.net/6/docs/ref/#language.Language), or the empty tree if there is no\nlanguage available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    if (!parse)\n        return null;\n    let oldVieport = parse.viewport;\n    parse.updateViewport({ from: 0, to: upto });\n    let result = parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n    parse.updateViewport(oldVieport);\n    return result;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserRunning) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nMove parsing forward, and update the editor state afterwards to\nreflect the new tree. Will work for at most `timeout`\nmilliseconds. Returns true if the parser managed get to the given\nposition in that time.\n*/\nfunction forceParsing(view, upto = view.viewport.to, timeout = 100) {\n    let success = ensureSyntaxTree(view.state, upto, timeout);\n    if (success != syntaxTree(view.state))\n        view.dispatch({});\n    return !!success;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n/**\nLezer-style\n[`Input`](https://lezer.codemirror.net/docs/ref#common.Input)\nobject for a [`Text`](https://codemirror.net/6/docs/ref/#state.Text) object.\n*/\nclass DocInput {\n    /**\n    Create an input object for the given document.\n    */\n    constructor(doc) {\n        this.doc = doc;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    get length() { return this.doc.length; }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, \n    /**\n    @internal\n    */\n    treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    /**\n    @internal\n    */\n    static create(parser, state, viewport) {\n        return new ParseContext(parser, state, [], Tree.empty, 0, viewport, [], null);\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(until, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            if (typeof until == \"number\") {\n                let endTime = Date.now() + until;\n                until = () => Date.now() > endTime;\n            }\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (until())\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged && this.tree == this.context.tree)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Work.Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* Work.InitViewport */, state.doc.length);\n        let parseState = ParseContext.create(state.facet(language).parser, state, { from: 0, to: vpTo });\n        if (!parseState.work(20 /* Work.Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* Work.MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* Work.MaxPause */ - 100 /* Work.MinPause */ });\n        }, 100 /* Work.MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst isInputPending = typeof navigator != \"undefined\" && ((_a = navigator.scheduling) === null || _a === void 0 ? void 0 : _a.isInputPending)\n    ? () => navigator.scheduling.isInputPending() : null;\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged || update.selectionSet) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* Work.ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* Work.ChunkTime */;\n            this.chunkBudget = 3000 /* Work.ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* Work.MaxParseAhead */))\n            return;\n        let endTime = Date.now() + Math.min(this.chunkBudget, 100 /* Work.Slice */, deadline && !isInputPending ? Math.max(25 /* Work.MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(() => {\n            return isInputPending && isInputPending() || Date.now() > endTime;\n        }, vpTo + (viewportFirst ? 0 : 100000 /* Work.MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return !!(this.working || this.workScheduled > 0);\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state. Used\nby `Language` object's `extension` property (so you don't need to\nmanually wrap your languages in this). Can be used to access the\ncurrent language on a state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: language => [\n        Language.state,\n        parseWorker,\n        EditorView.contentAttributes.compute([language], state => {\n            let lang = state.facet(language);\n            return lang && lang.name ? { \"data-language\": lang.name } : {};\n        })\n    ]\n});\n/**\nThis class bundles a [language](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a language support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth, as a column number (see\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)), at the start of a given\nline. A return value of `null` indicates no indentation can be\ndetermined, and the line should inherit the indentation of the one\nabove it. A return value of `undefined` defers to the next indent\nservice.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens. Should\nbe a string consisting either entirely of the same whitespace\ncharacter. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        let unit = values[0];\n        if (!unit || /\\S/.test(unit) || Array.from(unit).some(e => e != unit[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return unit;\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize, ch = state.facet(indentUnit)[0];\n    if (ch == \"\\t\") {\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n        ch = \" \";\n    }\n    for (let i = 0; i < cols; i++)\n        result += ch;\n    return result;\n}\n/**\nGet the indentation, as a column number, at the given position.\nWill first consult any [indent services](https://codemirror.net/6/docs/ref/#language.indentService)\nthat are registered, and if none of those return an indentation,\nthis will check the syntax tree for the [indent node\nprop](https://codemirror.net/6/docs/ref/#language.indentNodeProp) and use that if found. Returns a\nnumber when an indentation could be determined, and null\notherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result !== undefined)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree.length >= pos ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nCreate a change set that auto-indents all lines touched by the\ngiven document range.\n*/\nfunction indentRange(state, from, to) {\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => { var _a; return (_a = updated[start]) !== null && _a !== void 0 ? _a : -1; } });\n    let changes = [];\n    for (let pos = from; pos <= to;) {\n        let line = state.doc.lineAt(pos);\n        pos = line.to + 1;\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            continue;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    }\n    return state.changes(changes);\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak, simulateDoubleBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (simulateDoubleBreak && simulateBreak == pos)\n                return { text: \"\", from: pos };\n            else if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number (see also\n[`indentString`](https://codemirror.net/6/docs/ref/#language.indentString)) or null, where null\nindicates that no definitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    let stack = ast.resolveStack(pos);\n    let inner = ast.resolveInner(pos, -1).resolve(pos, 0).enterUnfinishedNodesBefore(pos);\n    if (inner != stack.node) {\n        let add = [];\n        for (let cur = inner; cur && !(cur.from == stack.node.from && cur.type == stack.node.type); cur = cur.parent)\n            add.push(cur);\n        for (let i = add.length - 1; i >= 0; i--)\n            stack = { node: add[i], next: stack };\n    }\n    return indentFor(stack, cx, pos);\n}\nfunction indentFor(stack, cx, pos) {\n    for (let cur = stack; cur; cur = cur.next) {\n        let strategy = indentStrategy(cur.node);\n        if (strategy)\n            return strategy(TreeIndentContext.create(cx, pos, cur));\n    }\n    return 0;\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions registered on syntax nodes.\n*/\nclass TreeIndentContext extends IndentContext {\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    @internal\n    */\n    context) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.context = context;\n    }\n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    get node() { return this.context.node; }\n    /**\n    @internal\n    */\n    static create(base, pos, context) {\n        return new TreeIndentContext(base, pos, context);\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        return this.baseIndentFor(this.node);\n    }\n    /**\n    Get the indentation for the reference line of the given node\n    (see [`baseIndent`](https://codemirror.net/6/docs/ref/#language.TreeIndentContext.baseIndent)).\n    */\n    baseIndentFor(node) {\n        let line = this.state.doc.lineAt(node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        return indentFor(this.context.next, this.base, this.pos);\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped) {\n            if (next.from >= lineEnd)\n                return null;\n            let space = /^ */.exec(openLine.text.slice(openToken.to - openLine.from))[0].length;\n            return { from: openToken.from, to: openToken.to + space };\n        }\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\") && !tr.isUserEvent(\"input.complete\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length < end)\n        return null;\n    let stack = tree.resolveStack(end, 1);\n    let found = null;\n    for (let iter = stack; iter; iter = iter.next) {\n        let cur = iter.node;\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop && (cur.to < tree.length - 50 || tree.length == state.doc.length || !isUnfinished(cur))) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\nfunction isUnfinished(node) {\n    let ch = node.lastChild;\n    return ch && ch.to == node.to && ch.type.isError;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#language.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\n/**\nThe state field that stores the folded ranges (as a [decoration\nset](https://codemirror.net/6/docs/ref/#view.DecorationSet)). Can be passed to\n[`EditorState.toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) and\n[`fromJSON`](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) to serialize the fold\nstate.\n*/\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to)) {\n                let { preparePlaceholder } = tr.state.facet(foldConfig);\n                let widget = !preparePlaceholder ? foldWidget :\n                    Decoration.replace({ widget: new PreparedFoldWidget(preparePlaceholder(tr.state, e.value)) });\n                folded = folded.update({ add: [widget.range(e.value.from, e.value.to)] });\n            }\n            else if (e.is(unfoldEffect)) {\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n            }\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f),\n    toJSON(folded, state) {\n        let ranges = [];\n        folded.between(0, state.doc.length, (from, to) => { ranges.push(from, to); });\n        return ranges;\n    },\n    fromJSON(value) {\n        if (!Array.isArray(value) || value.length % 2)\n            throw new RangeError(\"Invalid JSON for fold state\");\n        let ranges = [];\n        for (let i = 0; i < value.length;) {\n            let from = value[i++], to = value[i++];\n            if (typeof from != \"number\" || typeof to != \"number\")\n                throw new RangeError(\"Invalid JSON for fold state\");\n            ranges.push(foldWidget.range(from, to));\n        }\n        return Decoration.set(ranges, true);\n    }\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#state.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction findFold(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges. Note that, in most cases,\nfolding information will depend on the [syntax\ntree](https://codemirror.net/6/docs/ref/#language.syntaxTree), and folding everything may not work\nreliably when the document hasn't been fully parsed (either\nbecause the editor state was only just initialized, or because the\ndocument is so big that the parser decided not to parse it\nentirely).\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n// Find the foldable region containing the given line, if one exists\nfunction foldableContainer(view, lineBlock) {\n    // Look backwards through line blocks until we find a foldable region that\n    // intersects with the line\n    for (let line = lineBlock;;) {\n        let foldableRegion = foldable(view.state, line.from, line.to);\n        if (foldableRegion && foldableRegion.to > lineBlock.from)\n            return foldableRegion;\n        if (!line.from)\n            return null;\n        line = view.lineBlockAt(line.from - 1);\n    }\n}\n/**\nToggle folding at cursors. Unfolds if there is an existing fold\nstarting in that line, tries to find a foldable range around it\notherwise.\n*/\nconst toggleFold = (view) => {\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded) {\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n        }\n        else {\n            let foldRange = foldableContainer(view, line);\n            if (foldRange)\n                effects.push(foldEffect.of(foldRange), announceFold(view, foldRange));\n        }\n    }\n    if (effects.length > 0)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#language.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#language.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#language.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#language.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    preparePlaceholder: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme$1];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nfunction widgetToDOM(view, prepared) {\n    let { state } = view, conf = state.facet(foldConfig);\n    let onclick = (event) => {\n        let line = view.lineBlockAt(view.posAtDOM(event.target));\n        let folded = findFold(view.state, line.from, line.to);\n        if (folded)\n            view.dispatch({ effects: unfoldEffect.of(folded) });\n        event.preventDefault();\n    };\n    if (conf.placeholderDOM)\n        return conf.placeholderDOM(view, onclick, prepared);\n    let element = document.createElement(\"span\");\n    element.textContent = conf.placeholderText;\n    element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n    element.title = state.phrase(\"unfold\");\n    element.className = \"cm-foldPlaceholder\";\n    element.onclick = onclick;\n    return element;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM(view) { return widgetToDOM(view, null); }\n    } });\nclass PreparedFoldWidget extends WidgetType {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    eq(other) { return this.value == other.value; }\n    toDOM(view) { return widgetToDOM(view, this.value); }\n}\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n    domEventHandlers: {},\n    foldingChanged: () => false\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false) ||\n                syntaxTree(update.startState) != syntaxTree(update.state) ||\n                fullConfig.foldingChanged(update))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = findFold(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    let { domEventHandlers } = fullConfig;\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: Object.assign(Object.assign({}, domEventHandlers), { click: (view, line, event) => {\n                    if (domEventHandlers.click && domEventHandlers.click(view, line, event))\n                        return true;\n                    let folded = findFold(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                } })\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(\n    /**\n    The tag styles used to create this highlight style.\n    */\n    specs, options) {\n        this.specs = specs;\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        const all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : undefined;\n        const scopeOpt = options.scope;\n        this.scope = scopeOpt instanceof Language ? (type) => type.prop(languageDataProp) == scopeOpt.data\n            : scopeOpt ? (type) => type == scopeOpt : undefined;\n        this.style = tagHighlighter(specs.map(style => ({\n            tag: style.tag,\n            class: style.class || def(Object.assign({}, style, { tag: null }))\n        })), {\n            all,\n        }).style;\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.themeType = options.themeType;\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The specs must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighter\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n}\nconst highlighterFacet = /*@__PURE__*/Facet.define();\nconst fallbackHighlighter = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? [values[0]] : null; }\n});\nfunction getHighlighters(state) {\n    let main = state.facet(highlighterFacet);\n    return main.length ? main : state.facet(fallbackHighlighter);\n}\n/**\nWrap a highlighter in an editor extension that uses it to apply\nsyntax highlighting to the editor content.\n\nWhen multiple (non-fallback) styles are provided, the styling\napplied is the union of the classes they emit.\n*/\nfunction syntaxHighlighting(highlighter, options) {\n    let ext = [treeHighlighter], themeType;\n    if (highlighter instanceof HighlightStyle) {\n        if (highlighter.module)\n            ext.push(EditorView.styleModule.of(highlighter.module));\n        themeType = highlighter.themeType;\n    }\n    if (options === null || options === void 0 ? void 0 : options.fallback)\n        ext.push(fallbackHighlighter.of(highlighter));\n    else if (themeType)\n        ext.push(highlighterFacet.computeN([EditorView.darkTheme], state => {\n            return state.facet(EditorView.darkTheme) == (themeType == \"dark\") ? [highlighter] : [];\n        }));\n    else\n        ext.push(highlighterFacet.of(highlighter));\n    return ext;\n}\n/**\nReturns the CSS classes (if any) that the highlighters active in\nthe state would assign to the given style\n[tags](https://lezer.codemirror.net/docs/ref#highlight.Tag) and\n(optional) language\n[scope](https://codemirror.net/6/docs/ref/#language.HighlightStyle^define^options.scope).\n*/\nfunction highlightingFor(state, tags, scope) {\n    let highlighters = getHighlighters(state);\n    let result = null;\n    if (highlighters)\n        for (let highlighter of highlighters) {\n            if (!highlighter.scope || scope && highlighter.scope(scope)) {\n                let cls = highlighter.style(tags);\n                if (cls)\n                    result = result ? result + \" \" + cls : cls;\n            }\n        }\n    return result;\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlighters(view.state));\n        this.decoratedTo = view.viewport.to;\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), highlighters = getHighlighters(update.state);\n        let styleChange = highlighters != getHighlighters(update.startState);\n        let { viewport } = update.view, decoratedToMapped = update.changes.mapPos(this.decoratedTo, 1);\n        if (tree.length < viewport.to && !styleChange && tree.type == this.tree.type && decoratedToMapped >= viewport.to) {\n            this.decorations = this.decorations.map(update.changes);\n            this.decoratedTo = decoratedToMapped;\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, highlighters);\n            this.decoratedTo = viewport.to;\n        }\n    }\n    buildDeco(view, highlighters) {\n        if (!highlighters || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTree(this.tree, highlighters, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            }, from, to);\n        }\n        return builder.finish();\n    }\n}\nconst treeHighlighter = /*@__PURE__*/Prec.high(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.meta,\n        color: \"#404740\" },\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \"&.cm-focused .cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \"&.cm-focused .cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist,\n            renderMatch: defaultRenderMatch\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nfunction defaultRenderMatch(match) {\n    let decorations = [];\n    let mark = match.matched ? matchingMark : nonmatchingMark;\n    decorations.push(mark.range(match.start.from, match.start.to));\n    if (match.end)\n        decorations.push(mark.range(match.end.from, match.end.to));\n    return decorations;\n}\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (match)\n                decorations = decorations.concat(config.renderMatch(match, tr.state));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\n/**\nWhen larger syntax nodes, such as HTML tags, are marked as\nopening/closing, it can be a bit messy to treat the whole node as\na matchable bracket. This node prop allows you to define, for such\na node, a ‘handle’—the part of the node that is highlighted, and\nthat the cursor must be on to activate highlighting in the first\nplace.\n*/\nconst bracketMatchingHandle = /*@__PURE__*/new NodeProp();\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\nfunction findHandle(node) {\n    let hasHandle = node.type.prop(bracketMatchingHandle);\n    return hasHandle ? hasHandle(node.node) : node;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to) {\n            let handle = findHandle(cur);\n            if (handle && (dir > 0 ? pos >= handle.from && pos < handle.to : pos > handle.from && pos <= handle.to))\n                return matchMarkedBrackets(state, pos, dir, cur, handle, matches, brackets);\n        }\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, handle, matching, brackets) {\n    let parent = token.parent, firstToken = { from: handle.from, to: handle.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor();\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    let endHandle = findHandle(cursor);\n                    return { start: firstToken, end: endHandle ? { from: endHandle.from, to: endHandle.to } : undefined, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    if (depth == 0) {\n                        let endHandle = findHandle(cursor);\n                        return {\n                            start: firstToken,\n                            end: endHandle && endHandle.from < endHandle.to ? { from: endHandle.from, to: endHandle.to } : undefined,\n                            matched: false\n                        };\n                    }\n                    depth--;\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolveInner(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\n// Counts the column offset in a string, taking tabs into account.\n// Used mostly to find indentation.\nfunction countCol(string, end, tabSize, startIndex = 0, startValue = 0) {\n    if (end == null) {\n        end = string.search(/[^\\s\\u00a0]/);\n        if (end == -1)\n            end = string.length;\n    }\n    let n = startValue;\n    for (let i = startIndex; i < end; i++) {\n        if (string.charCodeAt(i) == 9)\n            n += tabSize - (n % tabSize);\n        else\n            n++;\n    }\n    return n;\n}\n/**\nEncapsulates a single line of input. Given to stream syntax code,\nwhich uses it to tokenize the content.\n*/\nclass StringStream {\n    /**\n    Create a stream.\n    */\n    constructor(\n    /**\n    The line.\n    */\n    string, tabSize, \n    /**\n    The current indent unit size.\n    */\n    indentUnit, overrideIndent) {\n        this.string = string;\n        this.tabSize = tabSize;\n        this.indentUnit = indentUnit;\n        this.overrideIndent = overrideIndent;\n        /**\n        The current position on the line.\n        */\n        this.pos = 0;\n        /**\n        The start position of the current token.\n        */\n        this.start = 0;\n        this.lastColumnPos = 0;\n        this.lastColumnValue = 0;\n    }\n    /**\n    True if we are at the end of the line.\n    */\n    eol() { return this.pos >= this.string.length; }\n    /**\n    True if we are at the start of the line.\n    */\n    sol() { return this.pos == 0; }\n    /**\n    Get the next code unit after the current position, or undefined\n    if we're at the end of the line.\n    */\n    peek() { return this.string.charAt(this.pos) || undefined; }\n    /**\n    Read the next code unit and advance `this.pos`.\n    */\n    next() {\n        if (this.pos < this.string.length)\n            return this.string.charAt(this.pos++);\n    }\n    /**\n    Match the next character against the given string, regular\n    expression, or predicate. Consume and return it if it matches.\n    */\n    eat(match) {\n        let ch = this.string.charAt(this.pos);\n        let ok;\n        if (typeof match == \"string\")\n            ok = ch == match;\n        else\n            ok = ch && (match instanceof RegExp ? match.test(ch) : match(ch));\n        if (ok) {\n            ++this.pos;\n            return ch;\n        }\n    }\n    /**\n    Continue matching characters that match the given string,\n    regular expression, or predicate function. Return true if any\n    characters were consumed.\n    */\n    eatWhile(match) {\n        let start = this.pos;\n        while (this.eat(match)) { }\n        return this.pos > start;\n    }\n    /**\n    Consume whitespace ahead of `this.pos`. Return true if any was\n    found.\n    */\n    eatSpace() {\n        let start = this.pos;\n        while (/[\\s\\u00a0]/.test(this.string.charAt(this.pos)))\n            ++this.pos;\n        return this.pos > start;\n    }\n    /**\n    Move to the end of the line.\n    */\n    skipToEnd() { this.pos = this.string.length; }\n    /**\n    Move to directly before the given character, if found on the\n    current line.\n    */\n    skipTo(ch) {\n        let found = this.string.indexOf(ch, this.pos);\n        if (found > -1) {\n            this.pos = found;\n            return true;\n        }\n    }\n    /**\n    Move back `n` characters.\n    */\n    backUp(n) { this.pos -= n; }\n    /**\n    Get the column position at `this.pos`.\n    */\n    column() {\n        if (this.lastColumnPos < this.start) {\n            this.lastColumnValue = countCol(this.string, this.start, this.tabSize, this.lastColumnPos, this.lastColumnValue);\n            this.lastColumnPos = this.start;\n        }\n        return this.lastColumnValue;\n    }\n    /**\n    Get the indentation column of the current line.\n    */\n    indentation() {\n        var _a;\n        return (_a = this.overrideIndent) !== null && _a !== void 0 ? _a : countCol(this.string, null, this.tabSize);\n    }\n    /**\n    Match the input against the given string or regular expression\n    (which should start with a `^`). Return true or the regexp match\n    if it matches.\n    \n    Unless `consume` is set to `false`, this will move `this.pos`\n    past the matched text.\n    \n    When matching a string `caseInsensitive` can be set to true to\n    make the match case-insensitive.\n    */\n    match(pattern, consume, caseInsensitive) {\n        if (typeof pattern == \"string\") {\n            let cased = (str) => caseInsensitive ? str.toLowerCase() : str;\n            let substr = this.string.substr(this.pos, pattern.length);\n            if (cased(substr) == cased(pattern)) {\n                if (consume !== false)\n                    this.pos += pattern.length;\n                return true;\n            }\n            else\n                return null;\n        }\n        else {\n            let match = this.string.slice(this.pos).match(pattern);\n            if (match && match.index > 0)\n                return null;\n            if (match && consume !== false)\n                this.pos += match[0].length;\n            return match;\n        }\n    }\n    /**\n    Get the current token.\n    */\n    current() { return this.string.slice(this.start, this.pos); }\n}\n\nfunction fullParser(spec) {\n    return {\n        name: spec.name || \"\",\n        token: spec.token,\n        blankLine: spec.blankLine || (() => { }),\n        startState: spec.startState || (() => true),\n        copyState: spec.copyState || defaultCopyState,\n        indent: spec.indent || (() => null),\n        languageData: spec.languageData || {},\n        tokenTable: spec.tokenTable || noTokens\n    };\n}\nfunction defaultCopyState(state) {\n    if (typeof state != \"object\")\n        return state;\n    let newState = {};\n    for (let prop in state) {\n        let val = state[prop];\n        newState[prop] = (val instanceof Array ? val.slice() : val);\n    }\n    return newState;\n}\nconst IndentedFrom = /*@__PURE__*/new WeakMap();\n/**\nA [language](https://codemirror.net/6/docs/ref/#language.Language) class based on a CodeMirror\n5-style [streaming parser](https://codemirror.net/6/docs/ref/#language.StreamParser).\n*/\nclass StreamLanguage extends Language {\n    constructor(parser) {\n        let data = defineLanguageFacet(parser.languageData);\n        let p = fullParser(parser), self;\n        let impl = new class extends Parser {\n            createParse(input, fragments, ranges) {\n                return new Parse(self, input, fragments, ranges);\n            }\n        };\n        super(data, impl, [], parser.name);\n        this.topNode = docID(data, this);\n        self = this;\n        this.streamParser = p;\n        this.stateAfter = new NodeProp({ perNode: true });\n        this.tokenTable = parser.tokenTable ? new TokenTable(p.tokenTable) : defaultTokenTable;\n    }\n    /**\n    Define a stream language.\n    */\n    static define(spec) { return new StreamLanguage(spec); }\n    /**\n    @internal\n    */\n    getIndent(cx) {\n        let from = undefined;\n        let { overrideIndentation } = cx.options;\n        if (overrideIndentation) {\n            from = IndentedFrom.get(cx.state);\n            if (from != null && from < cx.pos - 1e4)\n                from = undefined;\n        }\n        let start = findState(this, cx.node.tree, cx.node.from, cx.node.from, from !== null && from !== void 0 ? from : cx.pos), statePos, state;\n        if (start) {\n            state = start.state;\n            statePos = start.pos + 1;\n        }\n        else {\n            state = this.streamParser.startState(cx.unit);\n            statePos = cx.node.from;\n        }\n        if (cx.pos - statePos > 10000 /* C.MaxIndentScanDist */)\n            return null;\n        while (statePos < cx.pos) {\n            let line = cx.state.doc.lineAt(statePos), end = Math.min(cx.pos, line.to);\n            if (line.length) {\n                let indentation = overrideIndentation ? overrideIndentation(line.from) : -1;\n                let stream = new StringStream(line.text, cx.state.tabSize, cx.unit, indentation < 0 ? undefined : indentation);\n                while (stream.pos < end - line.from)\n                    readToken(this.streamParser.token, stream, state);\n            }\n            else {\n                this.streamParser.blankLine(state, cx.unit);\n            }\n            if (end == cx.pos)\n                break;\n            statePos = line.to + 1;\n        }\n        let line = cx.lineAt(cx.pos);\n        if (overrideIndentation && from == null)\n            IndentedFrom.set(cx.state, line.from);\n        return this.streamParser.indent(state, /^\\s*(.*)/.exec(line.text)[1], cx);\n    }\n    get allowsNesting() { return false; }\n}\nfunction findState(lang, tree, off, startPos, before) {\n    let state = off >= startPos && off + tree.length <= before && tree.prop(lang.stateAfter);\n    if (state)\n        return { state: lang.streamParser.copyState(state), pos: off + tree.length };\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let child = tree.children[i], pos = off + tree.positions[i];\n        let found = child instanceof Tree && pos < before && findState(lang, child, pos, startPos, before);\n        if (found)\n            return found;\n    }\n    return null;\n}\nfunction cutTree(lang, tree, from, to, inside) {\n    if (inside && from <= 0 && to >= tree.length)\n        return tree;\n    if (!inside && from == 0 && tree.type == lang.topNode)\n        inside = true;\n    for (let i = tree.children.length - 1; i >= 0; i--) {\n        let pos = tree.positions[i], child = tree.children[i], inner;\n        if (pos < to && child instanceof Tree) {\n            if (!(inner = cutTree(lang, child, from - pos, to - pos, inside)))\n                break;\n            return !inside ? inner\n                : new Tree(tree.type, tree.children.slice(0, i).concat(inner), tree.positions.slice(0, i + 1), pos + inner.length);\n        }\n    }\n    return null;\n}\nfunction findStartInFragments(lang, fragments, startPos, endPos, editorState) {\n    for (let f of fragments) {\n        let from = f.from + (f.openStart ? 25 : 0), to = f.to - (f.openEnd ? 25 : 0);\n        let found = from <= startPos && to > startPos && findState(lang, f.tree, 0 - f.offset, startPos, to), tree;\n        if (found && found.pos <= endPos && (tree = cutTree(lang, f.tree, startPos + f.offset, found.pos + f.offset, false)))\n            return { state: found.state, tree };\n    }\n    return { state: lang.streamParser.startState(editorState ? getIndentUnit(editorState) : 4), tree: Tree.empty };\n}\nclass Parse {\n    constructor(lang, input, fragments, ranges) {\n        this.lang = lang;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.stoppedAt = null;\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.rangeIndex = 0;\n        this.to = ranges[ranges.length - 1].to;\n        let context = ParseContext.get(), from = ranges[0].from;\n        let { state, tree } = findStartInFragments(lang, fragments, from, this.to, context === null || context === void 0 ? void 0 : context.state);\n        this.state = state;\n        this.parsedPos = this.chunkStart = from + tree.length;\n        for (let i = 0; i < tree.children.length; i++) {\n            this.chunks.push(tree.children[i]);\n            this.chunkPos.push(tree.positions[i]);\n        }\n        if (context && this.parsedPos < context.viewport.from - 100000 /* C.MaxDistanceBeforeViewport */ &&\n            ranges.some(r => r.from <= context.viewport.from && r.to >= context.viewport.from)) {\n            this.state = this.lang.streamParser.startState(getIndentUnit(context.state));\n            context.skipUntilInView(this.parsedPos, context.viewport.from);\n            this.parsedPos = context.viewport.from;\n        }\n        this.moveRangeIndex();\n    }\n    advance() {\n        let context = ParseContext.get();\n        let parseEnd = this.stoppedAt == null ? this.to : Math.min(this.to, this.stoppedAt);\n        let end = Math.min(parseEnd, this.chunkStart + 2048 /* C.ChunkSize */);\n        if (context)\n            end = Math.min(end, context.viewport.to);\n        while (this.parsedPos < end)\n            this.parseLine(context);\n        if (this.chunkStart < this.parsedPos)\n            this.finishChunk();\n        if (this.parsedPos >= parseEnd)\n            return this.finish();\n        if (context && this.parsedPos >= context.viewport.to) {\n            context.skipUntilInView(this.parsedPos, parseEnd);\n            return this.finish();\n        }\n        return null;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n    }\n    lineAfter(pos) {\n        let chunk = this.input.chunk(pos);\n        if (!this.input.lineChunks) {\n            let eol = chunk.indexOf(\"\\n\");\n            if (eol > -1)\n                chunk = chunk.slice(0, eol);\n        }\n        else if (chunk == \"\\n\") {\n            chunk = \"\";\n        }\n        return pos + chunk.length <= this.to ? chunk : chunk.slice(0, this.to - pos);\n    }\n    nextLine() {\n        let from = this.parsedPos, line = this.lineAfter(from), end = from + line.length;\n        for (let index = this.rangeIndex;;) {\n            let rangeEnd = this.ranges[index].to;\n            if (rangeEnd >= end)\n                break;\n            line = line.slice(0, rangeEnd - (end - line.length));\n            index++;\n            if (index == this.ranges.length)\n                break;\n            let rangeStart = this.ranges[index].from;\n            let after = this.lineAfter(rangeStart);\n            line += after;\n            end = rangeStart + after.length;\n        }\n        return { line, end };\n    }\n    skipGapsTo(pos, offset, side) {\n        for (;;) {\n            let end = this.ranges[this.rangeIndex].to, offPos = pos + offset;\n            if (side > 0 ? end > offPos : end >= offPos)\n                break;\n            let start = this.ranges[++this.rangeIndex].from;\n            offset += start - end;\n        }\n        return offset;\n    }\n    moveRangeIndex() {\n        while (this.ranges[this.rangeIndex].to < this.parsedPos)\n            this.rangeIndex++;\n    }\n    emitToken(id, from, to, offset) {\n        let size = 4;\n        if (this.ranges.length > 1) {\n            offset = this.skipGapsTo(from, offset, 1);\n            from += offset;\n            let len0 = this.chunk.length;\n            offset = this.skipGapsTo(to, offset, -1);\n            to += offset;\n            size += this.chunk.length - len0;\n        }\n        let last = this.chunk.length - 4;\n        if (size == 4 && last >= 0 && this.chunk[last] == id && this.chunk[last + 2] == from)\n            this.chunk[last + 2] = to;\n        else\n            this.chunk.push(id, from, to, size);\n        return offset;\n    }\n    parseLine(context) {\n        let { line, end } = this.nextLine(), offset = 0, { streamParser } = this.lang;\n        let stream = new StringStream(line, context ? context.state.tabSize : 4, context ? getIndentUnit(context.state) : 2);\n        if (stream.eol()) {\n            streamParser.blankLine(this.state, stream.indentUnit);\n        }\n        else {\n            while (!stream.eol()) {\n                let token = readToken(streamParser.token, stream, this.state);\n                if (token)\n                    offset = this.emitToken(this.lang.tokenTable.resolve(token), this.parsedPos + stream.start, this.parsedPos + stream.pos, offset);\n                if (stream.start > 10000 /* C.MaxLineLength */)\n                    break;\n            }\n        }\n        this.parsedPos = end;\n        this.moveRangeIndex();\n        if (this.parsedPos < this.to)\n            this.parsedPos++;\n    }\n    finishChunk() {\n        let tree = Tree.build({\n            buffer: this.chunk,\n            start: this.chunkStart,\n            length: this.parsedPos - this.chunkStart,\n            nodeSet,\n            topID: 0,\n            maxBufferLength: 2048 /* C.ChunkSize */,\n            reused: this.chunkReused\n        });\n        tree = new Tree(tree.type, tree.children, tree.positions, tree.length, [[this.lang.stateAfter, this.lang.streamParser.copyState(this.state)]]);\n        this.chunks.push(tree);\n        this.chunkPos.push(this.chunkStart - this.ranges[0].from);\n        this.chunk = [];\n        this.chunkReused = undefined;\n        this.chunkStart = this.parsedPos;\n    }\n    finish() {\n        return new Tree(this.lang.topNode, this.chunks, this.chunkPos, this.parsedPos - this.ranges[0].from).balance();\n    }\n}\nfunction readToken(token, stream, state) {\n    stream.start = stream.pos;\n    for (let i = 0; i < 10; i++) {\n        let result = token(stream, state);\n        if (stream.pos > stream.start)\n            return result;\n    }\n    throw new Error(\"Stream parser failed to advance stream.\");\n}\nconst noTokens = /*@__PURE__*/Object.create(null);\nconst typeArray = [NodeType.none];\nconst nodeSet = /*@__PURE__*/new NodeSet(typeArray);\nconst warned = [];\n// Cache of node types by name and tags\nconst byTag = /*@__PURE__*/Object.create(null);\nconst defaultTable = /*@__PURE__*/Object.create(null);\nfor (let [legacyName, name] of [\n    [\"variable\", \"variableName\"],\n    [\"variable-2\", \"variableName.special\"],\n    [\"string-2\", \"string.special\"],\n    [\"def\", \"variableName.definition\"],\n    [\"tag\", \"tagName\"],\n    [\"attribute\", \"attributeName\"],\n    [\"type\", \"typeName\"],\n    [\"builtin\", \"variableName.standard\"],\n    [\"qualifier\", \"modifier\"],\n    [\"error\", \"invalid\"],\n    [\"header\", \"heading\"],\n    [\"property\", \"propertyName\"]\n])\n    defaultTable[legacyName] = /*@__PURE__*/createTokenType(noTokens, name);\nclass TokenTable {\n    constructor(extra) {\n        this.extra = extra;\n        this.table = Object.assign(Object.create(null), defaultTable);\n    }\n    resolve(tag) {\n        return !tag ? 0 : this.table[tag] || (this.table[tag] = createTokenType(this.extra, tag));\n    }\n}\nconst defaultTokenTable = /*@__PURE__*/new TokenTable(noTokens);\nfunction warnForPart(part, msg) {\n    if (warned.indexOf(part) > -1)\n        return;\n    warned.push(part);\n    console.warn(msg);\n}\nfunction createTokenType(extra, tagStr) {\n    let tags$1 = [];\n    for (let name of tagStr.split(\" \")) {\n        let found = [];\n        for (let part of name.split(\".\")) {\n            let value = (extra[part] || tags[part]);\n            if (!value) {\n                warnForPart(part, `Unknown highlighting tag ${part}`);\n            }\n            else if (typeof value == \"function\") {\n                if (!found.length)\n                    warnForPart(part, `Modifier ${part} used at start of tag`);\n                else\n                    found = found.map(value);\n            }\n            else {\n                if (found.length)\n                    warnForPart(part, `Tag ${part} used as modifier`);\n                else\n                    found = Array.isArray(value) ? value : [value];\n            }\n        }\n        for (let tag of found)\n            tags$1.push(tag);\n    }\n    if (!tags$1.length)\n        return 0;\n    let name = tagStr.replace(/ /g, \"_\"), key = name + \" \" + tags$1.map(t => t.id);\n    let known = byTag[key];\n    if (known)\n        return known.id;\n    let type = byTag[key] = NodeType.define({\n        id: typeArray.length,\n        name,\n        props: [styleTags({ [name]: tags$1 })]\n    });\n    typeArray.push(type);\n    return type.id;\n}\nfunction docID(data, lang) {\n    let type = NodeType.define({ id: typeArray.length, name: \"Document\", props: [\n            languageDataProp.add(() => data),\n            indentNodeProp.add(() => cx => lang.getIndent(cx))\n        ], top: true });\n    typeArray.push(type);\n    return type;\n}\n\nfunction buildForLine(line) {\n    return line.length <= 4096 && /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac\\ufb50-\\ufdff]/.test(line);\n}\nfunction textHasRTL(text) {\n    for (let i = text.iter(); !i.next().done;)\n        if (buildForLine(i.value))\n            return true;\n    return false;\n}\nfunction changeAddsRTL(change) {\n    let added = false;\n    change.iterChanges((fA, tA, fB, tB, ins) => {\n        if (!added && textHasRTL(ins))\n            added = true;\n    });\n    return added;\n}\nconst alwaysIsolate = /*@__PURE__*/Facet.define({ combine: values => values.some(x => x) });\n/**\nMake sure nodes\n[marked](https://lezer.codemirror.net/docs/ref/#common.NodeProp^isolate)\nas isolating for bidirectional text are rendered in a way that\nisolates them from the surrounding text.\n*/\nfunction bidiIsolates(options = {}) {\n    let extensions = [isolateMarks];\n    if (options.alwaysIsolate)\n        extensions.push(alwaysIsolate.of(true));\n    return extensions;\n}\nconst isolateMarks = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.always = view.state.facet(alwaysIsolate) ||\n            view.textDirection != Direction.LTR ||\n            view.state.facet(EditorView.perLineTextDirection);\n        this.hasRTL = !this.always && textHasRTL(view.state.doc);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.always || this.hasRTL ? buildDeco(view, this.tree, this.always) : Decoration.none;\n    }\n    update(update) {\n        let always = update.state.facet(alwaysIsolate) ||\n            update.view.textDirection != Direction.LTR ||\n            update.state.facet(EditorView.perLineTextDirection);\n        if (!always && !this.hasRTL && changeAddsRTL(update.changes))\n            this.hasRTL = true;\n        if (!always && !this.hasRTL)\n            return;\n        let tree = syntaxTree(update.state);\n        if (always != this.always || tree != this.tree || update.docChanged || update.viewportChanged) {\n            this.tree = tree;\n            this.always = always;\n            this.decorations = buildDeco(update.view, tree, always);\n        }\n    }\n}, {\n    provide: plugin => {\n        function access(view) {\n            var _a, _b;\n            return (_b = (_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.decorations) !== null && _b !== void 0 ? _b : Decoration.none;\n        }\n        return [EditorView.outerDecorations.of(access),\n            Prec.lowest(EditorView.bidiIsolatedRanges.of(access))];\n    }\n});\nfunction buildDeco(view, tree, always) {\n    let deco = new RangeSetBuilder();\n    let ranges = view.visibleRanges;\n    if (!always)\n        ranges = clipRTLLines(ranges, view.state.doc);\n    for (let { from, to } of ranges) {\n        tree.iterate({\n            enter: node => {\n                let iso = node.type.prop(NodeProp.isolate);\n                if (iso)\n                    deco.add(node.from, node.to, marks[iso]);\n            },\n            from, to\n        });\n    }\n    return deco.finish();\n}\nfunction clipRTLLines(ranges, doc) {\n    let cur = doc.iter(), pos = 0, result = [], last = null;\n    for (let { from, to } of ranges) {\n        if (last && last.to > from) {\n            from = last.to;\n            if (from >= to)\n                continue;\n        }\n        if (pos + cur.value.length < from) {\n            cur.next(from - (pos + cur.value.length));\n            pos = from;\n        }\n        for (;;) {\n            let start = pos, end = pos + cur.value.length;\n            if (!cur.lineBreak && buildForLine(cur.value)) {\n                if (last && last.to > start - 10)\n                    last.to = Math.min(to, end);\n                else\n                    result.push(last = { from: start, to: Math.min(to, end) });\n            }\n            if (end >= to)\n                break;\n            pos = end;\n            cur.next();\n        }\n    }\n    return result;\n}\nconst marks = {\n    rtl: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"rtl\" }, bidiIsolate: Direction.RTL }),\n    ltr: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"ltr\" }, bidiIsolate: Direction.LTR }),\n    auto: /*@__PURE__*/Decoration.mark({ class: \"cm-iso\", inclusive: true, attributes: { dir: \"auto\" }, bidiIsolate: null })\n};\n\nexport { DocInput, HighlightStyle, IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, StreamLanguage, StringStream, TreeIndentContext, bidiIsolates, bracketMatching, bracketMatchingHandle, codeFolding, continuedIndent, defaultHighlightStyle, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldAll, foldCode, foldEffect, foldGutter, foldInside, foldKeymap, foldNodeProp, foldService, foldState, foldable, foldedRanges, forceParsing, getIndentUnit, getIndentation, highlightingFor, indentNodeProp, indentOnInput, indentRange, indentService, indentString, indentUnit, language, languageDataProp, matchBrackets, sublanguageProp, syntaxHighlighting, syntaxParserRunning, syntaxTree, syntaxTreeAvailable, toggleFold, unfoldAll, unfoldCode, unfoldEffect };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 2770, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2776, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/autocomplete/dist/index.js"],"sourcesContent":["import { Annotation, StateEffect, EditorSelection, codePointAt, codePointSize, fromCodePoint, Facet, combineConfig, StateField, Prec, Text, Transaction, MapMode, RangeValue, RangeSet, CharCategory } from '@codemirror/state';\nimport { Direction, logException, showTooltip, EditorView, ViewPlugin, getTooltip, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit, \n    /**\n    The editor view. May be undefined if the context was created\n    in a situation where there is no such view available, such as\n    in synchronous updates via\n    [`CompletionResult.update`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.update)\n    or when called by test code.\n    */\n    view) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        this.view = view;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n        /**\n        @internal\n        */\n        this.abortOnDocChange = false;\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    \n    By default, running queries will not be aborted for regular\n    typing or backspacing, on the assumption that they are likely to\n    return a result with a\n    [`validFor`](https://codemirror.net/6/docs/ref/#autocomplete.CompletionResult.validFor) field that\n    allows the result to be used after all. Passing `onDocChange:\n    true` will cause this query to be aborted for any document\n    change.\n    */\n    addEventListener(type, listener, options) {\n        if (type == \"abort\" && this.abortListeners) {\n            this.abortListeners.push(listener);\n            if (options && options.onDocChange)\n                this.abortOnDocChange = true;\n        }\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [validFor, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, validFor } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n            if (pos.type.isTop)\n                break;\n        }\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent) {\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n            if (pos.type.isTop)\n                break;\n        }\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match, score) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n        this.score = score;\n    }\n}\nfunction cur(state) { return state.selection.main.from; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\n/**\nHelper function that returns a transaction spec which inserts a\ncompletion's text in the main selection range, and any other\nselection range that has the same text in front of it.\n*/\nfunction insertCompletionText(state, text, from, to) {\n    let { main } = state.selection, fromOff = from - main.from, toOff = to - main.from;\n    return Object.assign(Object.assign({}, state.changeByRange(range => {\n        if (range != main && from != to &&\n            state.sliceDoc(range.from + fromOff, range.from + toOff) != state.sliceDoc(from, to))\n            return { range };\n        let lines = state.toText(text);\n        return {\n            changes: { from: range.from + fromOff, to: to == main.from ? range.to : range.from + toOff, insert: lines },\n            range: EditorSelection.cursor(range.from + fromOff + lines.length)\n        };\n    })), { scrollIntoView: true, userEvent: \"input.complete\" });\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        this.score = 0;\n        this.matched = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    ret(score, matched) {\n        this.score = score;\n        this.matched = matched;\n        return this;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return a boolean indicating whether there was a match and,\n    // on success, set `this.score` to the score, `this.matched` to an\n    // array of `from, to` pairs indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return this.ret(-100 /* Penalty.NotFull */, []);\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0), firstSize = codePointSize(first);\n            let score = firstSize == word.length ? 0 : -100 /* Penalty.NotFull */;\n            if (first == chars[0]) ;\n            else if (first == folded[0])\n                score += -200 /* Penalty.CaseFold */;\n            else\n                return null;\n            return this.ret(score, [0, firstSize]);\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return this.ret(word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */, [0, this.pattern.length]);\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word), wordAdjacent = true;\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* Tp.NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Tp.Lower */ : next >= 65 && next <= 90 ? 1 /* Tp.Upper */ : 0 /* Tp.NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Tp.Upper */ : ch != ch.toUpperCase() ? 2 /* Tp.Lower */ : 0 /* Tp.NonWord */);\n            if (!i || type == 1 /* Tp.Upper */ && hasLower || prevType == 0 /* Tp.NonWord */ && type != 0 /* Tp.NonWord */) {\n                if (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true)))\n                    byWord[byWordTo++] = i;\n                else if (byWord.length)\n                    wordAdjacent = false;\n            }\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0 && wordAdjacent)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return this.ret(-200 /* Penalty.CaseFold */ - word.length + (adjacentEnd == word.length ? 0 : -100 /* Penalty.NotFull */), [0, adjacentEnd]);\n        if (direct > -1)\n            return this.ret(-700 /* Penalty.NotStart */ - word.length, [direct, direct + this.pattern.length]);\n        if (adjacentTo == len)\n            return this.ret(-200 /* Penalty.CaseFold */ + -700 /* Penalty.NotStart */ - word.length, [adjacentStart, adjacentEnd]);\n        if (byWordTo == len)\n            return this.result(-100 /* Penalty.ByWord */ + (byWordFolded ? -200 /* Penalty.CaseFold */ : 0) + -700 /* Penalty.NotStart */ +\n                (wordAdjacent ? 0 : -1100 /* Penalty.Gap */), byWord, word);\n        return chars.length == 2 ? null\n            : this.result((any[0] ? -700 /* Penalty.NotStart */ : 0) + -200 /* Penalty.CaseFold */ + -1100 /* Penalty.Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [], i = 0;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return this.ret(score - word.length, result);\n    }\n}\nclass StrictMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.matched = [];\n        this.score = 0;\n        this.folded = pattern.toLowerCase();\n    }\n    match(word) {\n        if (word.length < this.pattern.length)\n            return null;\n        let start = word.slice(0, this.pattern.length);\n        let match = start == this.pattern ? 0 : start.toLowerCase() == this.folded ? -200 /* Penalty.CaseFold */ : null;\n        if (match == null)\n            return null;\n        this.matched = [0, start.length];\n        this.score = match + (word.length == this.pattern.length ? 0 : -100 /* Penalty.NotFull */);\n        return this;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            activateOnCompletion: () => false,\n            activateOnTypingDelay: 100,\n            selectOnOpen: true,\n            override: null,\n            closeOnBlur: true,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            tooltipClass: () => \"\",\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: [],\n            positionInfo: defaultPositionInfo,\n            filterStrict: false,\n            compareCompletions: (a, b) => a.label.localeCompare(b.label),\n            interactionDelay: 75,\n            updateSyncTime: 100\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            closeOnBlur: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            tooltipClass: (a, b) => c => joinClass(a(c), b(c)),\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b),\n            filterStrict: (a, b) => a || b,\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\nfunction defaultPositionInfo(view, list, option, info, space, tooltip) {\n    let rtl = view.textDirection == Direction.RTL, left = rtl, narrow = false;\n    let side = \"top\", offset, maxWidth;\n    let spaceLeft = list.left - space.left, spaceRight = space.right - list.right;\n    let infoWidth = info.right - info.left, infoHeight = info.bottom - info.top;\n    if (left && spaceLeft < Math.min(infoWidth, spaceRight))\n        left = false;\n    else if (!left && spaceRight < Math.min(infoWidth, spaceLeft))\n        left = true;\n    if (infoWidth <= (left ? spaceLeft : spaceRight)) {\n        offset = Math.max(space.top, Math.min(option.top, space.bottom - infoHeight)) - list.top;\n        maxWidth = Math.min(400 /* Info.Width */, left ? spaceLeft : spaceRight);\n    }\n    else {\n        narrow = true;\n        maxWidth = Math.min(400 /* Info.Width */, (rtl ? list.right : space.right - list.left) - 30 /* Info.Margin */);\n        let spaceBelow = space.bottom - list.bottom;\n        if (spaceBelow >= infoHeight || spaceBelow > list.top) { // Below the completion\n            offset = option.bottom - list.top;\n        }\n        else { // Above it\n            side = \"bottom\";\n            offset = list.bottom - option.top;\n        }\n    }\n    let scaleY = (list.bottom - list.top) / tooltip.offsetHeight;\n    let scaleX = (list.right - list.left) / tooltip.offsetWidth;\n    return {\n        style: `${side}: ${offset / scaleY}px; max-width: ${maxWidth / scaleX}px`,\n        class: \"cm-completionInfo-\" + (narrow ? (rtl ? \"left-narrow\" : \"right-narrow\") : left ? \"left\" : \"right\")\n    };\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, _v, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let label = completion.displayLabel || completion.label, off = 0;\n            for (let j = 0; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected < 0)\n        selected = 0;\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField, applyCompletion) {\n        this.view = view;\n        this.stateField = stateField;\n        this.applyCompletion = applyCompletion;\n        this.info = null;\n        this.infoDestroy = null;\n        this.placeInfoReq = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.placeInfo(pos),\n            key: this\n        };\n        this.space = null;\n        this.currentClass = \"\";\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.tooltipClass = config.tooltipClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.updateTooltipClass(view.state);\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            let { options } = view.state.field(stateField).open;\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    this.applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.dom.addEventListener(\"focusout\", (e) => {\n            let state = view.state.field(this.stateField, false);\n            if (state && state.tooltip && view.state.facet(completionConfig).closeOnBlur &&\n                e.relatedTarget != view.contentDOM)\n                view.dispatch({ effects: closeCompletionEffect.of(null) });\n        });\n        this.showOptions(options, cState.id);\n    }\n    mount() { this.updateSel(); }\n    showOptions(options, id) {\n        if (this.list)\n            this.list.remove();\n        this.list = this.dom.appendChild(this.createListBox(options, id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfoReq);\n        });\n    }\n    update(update) {\n        var _a;\n        let cState = update.state.field(this.stateField);\n        let prevState = update.startState.field(this.stateField);\n        this.updateTooltipClass(update.state);\n        if (cState != prevState) {\n            let { options, selected, disabled } = cState.open;\n            if (!prevState.open || prevState.open.options != options) {\n                this.range = rangeAroundSelected(options.length, selected, update.state.facet(completionConfig).maxRenderedOptions);\n                this.showOptions(options, cState.id);\n            }\n            this.updateSel();\n            if (disabled != ((_a = prevState.open) === null || _a === void 0 ? void 0 : _a.disabled))\n                this.dom.classList.toggle(\"cm-tooltip-autocomplete-disabled\", !!disabled);\n        }\n    }\n    updateTooltipClass(state) {\n        let cls = this.tooltipClass(state);\n        if (cls != this.currentClass) {\n            for (let c of this.currentClass.split(\" \"))\n                if (c)\n                    this.dom.classList.remove(c);\n            for (let c of cls.split(\" \"))\n                if (c)\n                    this.dom.classList.add(c);\n            this.currentClass = cls;\n        }\n    }\n    positioned(space) {\n        this.space = space;\n        if (this.info)\n            this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected > -1 && open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.showOptions(open.options, cState.id);\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            this.destroyInfo();\n            let { completion } = open.options[open.selected];\n            let { info } = completion;\n            if (!info)\n                return;\n            let infoResult = typeof info === \"string\" ? document.createTextNode(info) : info(completion);\n            if (!infoResult)\n                return;\n            if (\"then\" in infoResult) {\n                infoResult.then(obj => {\n                    if (obj && this.view.state.field(this.stateField, false) == cState)\n                        this.addInfoPane(obj, completion);\n                }).catch(e => logException(this.view.state, e, \"completion info\"));\n            }\n            else {\n                this.addInfoPane(infoResult, completion);\n            }\n        }\n    }\n    addInfoPane(content, completion) {\n        this.destroyInfo();\n        let wrap = this.info = document.createElement(\"div\");\n        wrap.className = \"cm-tooltip cm-completionInfo\";\n        if (content.nodeType != null) {\n            wrap.appendChild(content);\n            this.infoDestroy = null;\n        }\n        else {\n            let { dom, destroy } = content;\n            wrap.appendChild(dom);\n            this.infoDestroy = destroy || null;\n        }\n        this.dom.appendChild(wrap);\n        this.view.requestMeasure(this.placeInfoReq);\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (opt.nodeName != \"LI\" || !opt.id) {\n                i--; // A section header\n            }\n            else if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let listRect = this.dom.getBoundingClientRect();\n        let infoRect = this.info.getBoundingClientRect();\n        let selRect = sel.getBoundingClientRect();\n        let space = this.space;\n        if (!space) {\n            let win = this.dom.ownerDocument.defaultView || window;\n            space = { left: 0, top: 0, right: win.innerWidth, bottom: win.innerHeight };\n        }\n        if (selRect.top > Math.min(space.bottom, listRect.bottom) - 10 ||\n            selRect.bottom < Math.max(space.top, listRect.top) + 10)\n            return null;\n        return this.view.state.facet(completionConfig).positionInfo(this.view, listRect, selRect, infoRect, space, this.dom);\n    }\n    placeInfo(pos) {\n        if (this.info) {\n            if (pos) {\n                if (pos.style)\n                    this.info.style.cssText = pos.style;\n                this.info.className = \"cm-tooltip cm-completionInfo \" + (pos.class || \"\");\n            }\n            else {\n                this.info.style.cssText = \"top: -1e6px\";\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        ul.setAttribute(\"aria-expanded\", \"true\");\n        ul.setAttribute(\"aria-label\", this.view.state.phrase(\"Completions\"));\n        let curSection = null;\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i], { section } = completion;\n            if (section) {\n                let name = typeof section == \"string\" ? section : section.name;\n                if (name != curSection && (i > range.from || range.from == 0)) {\n                    curSection = name;\n                    if (typeof section != \"string\" && section.header) {\n                        ul.appendChild(section.header(section));\n                    }\n                    else {\n                        let header = ul.appendChild(document.createElement(\"completion-section\"));\n                        header.textContent = name;\n                    }\n                }\n            }\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, this.view, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n    destroyInfo() {\n        if (this.info) {\n            if (this.infoDestroy)\n                this.infoDestroy();\n            this.info.remove();\n            this.info = null;\n        }\n    }\n    destroy() {\n        this.destroyInfo();\n    }\n}\nfunction completionTooltip(stateField, applyCompletion) {\n    return (view) => new CompletionTooltip(view, stateField, applyCompletion);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    let scaleY = parent.height / container.offsetHeight;\n    if (self.top < parent.top)\n        container.scrollTop -= (parent.top - self.top) / scaleY;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += (self.bottom - parent.bottom) / scaleY;\n}\n\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [];\n    let sections = null;\n    let addOption = (option) => {\n        options.push(option);\n        let { section } = option.completion;\n        if (section) {\n            if (!sections)\n                sections = [];\n            let name = typeof section == \"string\" ? section : section.name;\n            if (!sections.some(s => s.name == name))\n                sections.push(typeof section == \"string\" ? { name } : section);\n        }\n    };\n    let conf = state.facet(completionConfig);\n    for (let a of active)\n        if (a.hasResult()) {\n            let getMatch = a.result.getMatch;\n            if (a.result.filter === false) {\n                for (let option of a.result.options) {\n                    addOption(new Option(option, a.source, getMatch ? getMatch(option) : [], 1e9 - options.length));\n                }\n            }\n            else {\n                let pattern = state.sliceDoc(a.from, a.to), match;\n                let matcher = conf.filterStrict ? new StrictMatcher(pattern) : new FuzzyMatcher(pattern);\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        let matched = !option.displayLabel ? match.matched : getMatch ? getMatch(option, match.matched) : [];\n                        addOption(new Option(option, a.source, matched, match.score + (option.boost || 0)));\n                    }\n            }\n        }\n    if (sections) {\n        let sectionOrder = Object.create(null), pos = 0;\n        let cmp = (a, b) => { var _a, _b; return ((_a = a.rank) !== null && _a !== void 0 ? _a : 1e9) - ((_b = b.rank) !== null && _b !== void 0 ? _b : 1e9) || (a.name < b.name ? -1 : 1); };\n        for (let s of sections.sort(cmp)) {\n            pos -= 1e5;\n            sectionOrder[s.name] = pos;\n        }\n        for (let option of options) {\n            let { section } = option.completion;\n            if (section)\n                option.score += sectionOrder[typeof section == \"string\" ? section : section.name];\n        }\n    }\n    let result = [], prev = null;\n    let compare = conf.compareCompletions;\n    for (let opt of options.sort((a, b) => (b.score - a.score) || compare(a.completion, b.completion))) {\n        let cur = opt.completion;\n        if (!prev || prev.label != cur.label || prev.detail != cur.detail ||\n            (prev.type != null && cur.type != null && prev.type != cur.type) ||\n            prev.apply != cur.apply || prev.boost != cur.boost)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected, disabled) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n        this.disabled = disabled;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected, this.disabled);\n    }\n    static build(active, state, id, prev, conf, didSetActive) {\n        if (prev && !didSetActive && active.some(s => s.isPending))\n            return prev.setDisabled();\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return prev && active.some(a => a.isPending) ? prev.setDisabled() : null;\n        let selected = state.facet(completionConfig).selectOnOpen ? 0 : -1;\n        if (prev && prev.selected != selected && prev.selected != -1) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length; i++)\n                if (options[i].completion == selectedValue) {\n                    selected = i;\n                    break;\n                }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: createTooltip,\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected, false);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected, this.disabled);\n    }\n    setDisabled() {\n        return new CompletionDialog(this.options, this.attrs, this.tooltip, this.timestamp, this.selected, true);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* State.Inactive */) ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = this.open, didSet = tr.effects.some(e => e.is(setActiveEffect));\n        if (open && tr.docChanged)\n            open = open.map(tr.changes);\n        if (tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) || didSet)\n            open = CompletionDialog.build(active, state, this.id, open, conf, didSet);\n        else if (open && open.disabled && !active.some(a => a.isPending))\n            open = null;\n        if (!open && active.every(a => !a.isPending) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* State.Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : this.active.length ? baseAttrs : noAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult())\n            iA++;\n        while (iB < b.length && !b[iB].hasResult())\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\"\n};\nconst noAttrs = {};\nfunction makeAttrs(id, selected) {\n    let result = {\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-controls\": id\n    };\n    if (selected > -1)\n        result[\"aria-activedescendant\"] = id + \"-\" + selected;\n    return result;\n}\nconst none = [];\nfunction getUpdateType(tr, conf) {\n    if (tr.isUserEvent(\"input.complete\")) {\n        let completion = tr.annotation(pickedCompletion);\n        if (completion && conf.activateOnCompletion(completion))\n            return 4 /* UpdateType.Activate */ | 8 /* UpdateType.Reset */;\n    }\n    let typing = tr.isUserEvent(\"input.type\");\n    return typing && conf.activateOnTyping ? 4 /* UpdateType.Activate */ | 1 /* UpdateType.Typing */\n        : typing ? 1 /* UpdateType.Typing */\n            : tr.isUserEvent(\"delete.backward\") ? 2 /* UpdateType.Backspacing */\n                : tr.selection ? 8 /* UpdateType.Reset */\n                    : tr.docChanged ? 16 /* UpdateType.ResetIfTouching */ : 0 /* UpdateType.None */;\n}\nclass ActiveSource {\n    constructor(source, state, explicit = false) {\n        this.source = source;\n        this.state = state;\n        this.explicit = explicit;\n    }\n    hasResult() { return false; }\n    get isPending() { return this.state == 1 /* State.Pending */; }\n    update(tr, conf) {\n        let type = getUpdateType(tr, conf), value = this;\n        if ((type & 8 /* UpdateType.Reset */) || (type & 16 /* UpdateType.ResetIfTouching */) && this.touches(tr))\n            value = new ActiveSource(value.source, 0 /* State.Inactive */);\n        if ((type & 4 /* UpdateType.Activate */) && value.state == 0 /* State.Inactive */)\n            value = new ActiveSource(this.source, 1 /* State.Pending */);\n        value = value.updateFor(tr, type);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* State.Pending */, effect.value);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* State.Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    updateFor(tr, type) { return this.map(tr.changes); }\n    map(changes) { return this; }\n    touches(tr) {\n        return tr.changes.touchesRange(cur(tr.state));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicit, limit, result, from, to) {\n        super(source, 3 /* State.Result */, explicit);\n        this.limit = limit;\n        this.result = result;\n        this.from = from;\n        this.to = to;\n    }\n    hasResult() { return true; }\n    updateFor(tr, type) {\n        var _a;\n        if (!(type & 3 /* UpdateType.SimpleInteraction */))\n            return this.map(tr.changes);\n        let result = this.result;\n        if (result.map && !tr.changes.empty)\n            result = result.map(result, tr.changes);\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if (pos > to || !result ||\n            (type & 2 /* UpdateType.Backspacing */) && (cur(tr.startState) == this.from || pos < this.limit))\n            return new ActiveSource(this.source, type & 4 /* UpdateType.Activate */ ? 1 /* State.Pending */ : 0 /* State.Inactive */);\n        let limit = tr.changes.mapPos(this.limit);\n        if (checkValid(result.validFor, tr.state, from, to))\n            return new ActiveResult(this.source, this.explicit, limit, result, from, to);\n        if (result.update &&\n            (result = result.update(result, from, to, new CompletionContext(tr.state, pos, false))))\n            return new ActiveResult(this.source, this.explicit, limit, result, result.from, (_a = result.to) !== null && _a !== void 0 ? _a : cur(tr.state));\n        return new ActiveSource(this.source, 1 /* State.Pending */, this.explicit);\n    }\n    map(mapping) {\n        if (mapping.empty)\n            return this;\n        let result = this.result.map ? this.result.map(this.result, mapping) : this.result;\n        if (!result)\n            return new ActiveSource(this.source, 0 /* State.Inactive */);\n        return new ActiveResult(this.source, this.explicit, mapping.mapPos(this.limit), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1));\n    }\n    touches(tr) {\n        return tr.changes.touchesRange(this.from, this.to);\n    }\n}\nfunction checkValid(validFor, state, from, to) {\n    if (!validFor)\n        return false;\n    let text = state.sliceDoc(from, to);\n    return typeof validFor == \"function\" ? validFor(text, from, to, state) : ensureAnchor(validFor, true).test(text);\n}\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\nfunction applyCompletion(view, option) {\n    const apply = option.completion.apply || option.completion.label;\n    let result = view.state.field(completionState).active.find(a => a.source == option.source);\n    if (!(result instanceof ActiveResult))\n        return false;\n    if (typeof apply == \"string\")\n        view.dispatch(Object.assign(Object.assign({}, insertCompletionText(view.state, apply, result.from, result.to)), { annotations: pickedCompletion.of(option.completion) }));\n    else\n        apply(view, option.completion, result.from, result.to);\n    return true;\n}\nconst createTooltip = /*@__PURE__*/completionTooltip(completionState, applyCompletion);\n\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || cState.open.disabled ||\n            Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = getTooltip(view, cState.open.tooltip)))\n            step = Math.max(2, Math.floor(tooltip.dom.offsetHeight /\n                tooltip.dom.querySelector(\"li\").offsetHeight) - 1);\n        let { length } = cState.open.options;\n        let selected = cState.open.selected > -1 ? cState.open.selected + step * (forward ? 1 : -1) : forward ? 0 : length - 1;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || cState.open.selected < 0 || cState.open.disabled ||\n        Date.now() - cState.open.timestamp < view.state.facet(completionConfig).interactionDelay)\n        return false;\n    return applyCompletion(view, cState.open.options[cState.open.selected]);\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* State.Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.pendingStart = false;\n        this.composing = 0 /* CompositionState.None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.isPending)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        let conf = update.state.facet(completionConfig);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            let type = getUpdateType(tr, conf);\n            return (type & 8 /* UpdateType.Reset */) || (tr.selection || tr.docChanged) && !(type & 3 /* UpdateType.SimpleInteraction */);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.context.abortOnDocChange && update.docChanged ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && Date.now() - query.time > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        if (update.transactions.some(tr => tr.effects.some(e => e.is(startCompletionEffect))))\n            this.pendingStart = true;\n        let delay = this.pendingStart ? 50 : conf.activateOnTypingDelay;\n        this.debounceUpdate = cState.active.some(a => a.isPending && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), delay) : -1;\n        if (this.composing != 0 /* CompositionState.None */)\n            for (let tr of update.transactions) {\n                if (tr.isUserEvent(\"input.type\"))\n                    this.composing = 2 /* CompositionState.Changed */;\n                else if (this.composing == 2 /* CompositionState.Changed */ && tr.selection)\n                    this.composing = 3 /* CompositionState.ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        this.pendingStart = false;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.isPending && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n        if (this.running.length && cState.open && cState.open.disabled)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicit, this.view);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), this.view.state.facet(completionConfig).updateSyncTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig), cState = this.view.state.field(completionState);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let pos = cur(query.updates.length ? query.updates[0].startState : this.view.state);\n                let limit = Math.min(pos, query.done.from + (query.active.explicit ? 0 : 1));\n                let active = new ActiveResult(query.active.source, query.active.explicit, limit, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : pos);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = cState.active.find(a => a.source == query.active.source);\n            if (current && current.isPending) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* State.Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (!active.isPending)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length || cState.open && cState.open.disabled)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        blur(event) {\n            let state = this.view.state.field(completionState, false);\n            if (state && state.tooltip && this.view.state.facet(completionConfig).closeOnBlur) {\n                let dialog = state.open && getTooltip(this.view, state.open.tooltip);\n                if (!dialog || !dialog.dom.contains(event.relatedTarget))\n                    setTimeout(() => this.view.dispatch({ effects: closeCompletionEffect.of(null) }), 10);\n            }\n        },\n        compositionstart() {\n            this.composing = 1 /* CompositionState.Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* CompositionState.ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* CompositionState.None */;\n        }\n    }\n});\nconst windows = typeof navigator == \"object\" && /*@__PURE__*//Win/.test(navigator.platform);\nconst commitCharacters = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        let field = view.state.field(completionState, false);\n        if (!field || !field.open || field.open.disabled || field.open.selected < 0 ||\n            event.key.length > 1 || event.ctrlKey && !(windows && event.altKey) || event.metaKey)\n            return false;\n        let option = field.open.options[field.open.selected];\n        let result = field.active.find(a => a.source == option.source);\n        let commitChars = option.completion.commitCharacters || result.result.commitCharacters;\n        if (commitChars && commitChars.indexOf(event.key) > -1)\n            applyCompletion(view, option);\n        return false;\n    }\n}));\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            height: \"100%\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li, & > completion-section\": {\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\"\n            },\n            \"& > completion-section\": {\n                display: \"list-item\",\n                borderBottom: \"1px solid silver\",\n                paddingLeft: \"0.5em\",\n                opacity: 0.7\n            }\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#17c\",\n        color: \"white\",\n    },\n    \"&light .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#777\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete-disabled ul li[aria-selected]\": {\n        background: \"#444\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: `${400 /* Info.Width */}px`,\n        boxSizing: \"border-box\",\n        whiteSpace: \"pre-line\"\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-left-narrow\": { right: `${30 /* Info.Margin */}px` },\n    \".cm-completionInfo.cm-completionInfo-right-narrow\": { left: `${30 /* Info.Margin */}px` },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        display: \"inline-block\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\",\n        boxSizing: \"content-box\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        let from = changes.mapPos(this.from, -1, MapMode.TrackDel);\n        let to = changes.mapPos(this.to, 1, MapMode.TrackDel);\n        return from == null || to == null ? null : new FieldRange(this.field, from, to);\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|((?:\\\\[{}]|[^}])*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, rawName = m[2] || m[3] || \"\", found = -1;\n                let name = rawName.replace(/\\\\[{}]/g, m => m[1]);\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + rawName + line.slice(m.index + m[0].length);\n            }\n            line = line.replace(/\\\\([{}])/g, (_, brace, index) => {\n                for (let pos of positions)\n                    if (pos.line == lines.length && pos.from > index) {\n                        pos.from--;\n                        pos.to--;\n                    }\n                return brace;\n            });\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        let ranges = [];\n        for (let r of this.ranges) {\n            let mapped = r.map(changes);\n            if (!mapped)\n                return null;\n            ranges.push(mapped);\n        }\n        return new ActiveSnippet(ranges, this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can\n[apply](https://codemirror.net/6/docs/ref/#autocomplete.Completion.apply) it. Snippets are written\nusing syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n\nTo include a literal `{` or `}` in your template, put a backslash\nin front of it. This will be removed and the brace will not be\ninterpreted as indicating a placeholder.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let { main } = editor.state.selection;\n        let spec = {\n            changes: { from, to: to == main.from ? main.to : to, insert: Text.of(text) },\n            scrollIntoView: true,\n            annotations: completion ? [pickedCompletion.of(completion), Transaction.userEvent.of(\"input.complete\")] : undefined\n        };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.some(r => r.field > 0)) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next)),\n            scrollIntoView: true\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\n/**\nCheck if there is an active snippet with a next field for\n`nextSnippetField` to move to.\n*/\nfunction hasNextSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.ranges.some(r => r.field == active.active + 1));\n}\n/**\nReturns true if there is an active snippet and a previous field\nfor `prevSnippetField` to move to.\n*/\nfunction hasPrevSnippetField(state) {\n    let active = state.field(snippetState, false);\n    return !!(active && active.active > 0);\n}\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field)\n                ? new ActiveSnippet(active.ranges, match.field) : null),\n            scrollIntoView: true\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\]\\-\\\\]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* C.MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* C.MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* C.MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* C.MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* C.Range */, from);\n    return { from, options, validFor: mapRE(re, s => \"^\" + s) };\n};\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}:;>\",\n    stringPrefixes: []\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        value = value.map(tr.changes);\n        if (tr.selection) {\n            let line = tr.state.doc.lineAt(tr.selection.main.head);\n            value = value.update({ filter: from => from >= line.from && from <= line.to });\n        }\n        for (let effect of tr.effects)\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [inputHandler, bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\nconst inputHandler = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, insert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n});\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length) };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"delete.backward\" }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#autocomplete.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#autocomplete.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1, conf)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return { changes: { from: range.head, to: range.head + close.length, insert: close },\n                range: EditorSelection.cursor(range.head + close.length) };\n        return dont = { range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple, config) {\n    let stringPrefixes = config.stringPrefixes || defaults.stringPrefixes;\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos), start;\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                let content = isTriple ? token + token + token : token;\n                return { changes: { from: pos, to: pos + content.length, insert: content },\n                    range: EditorSelection.cursor(pos + content.length) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            (start = canStartStringAt(state, pos - 2 * token.length, stringPrefixes)) > -1 &&\n            nodeStart(state, start)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            if (canStartStringAt(state, pos, stringPrefixes) > -1 && !probablyInString(state, pos, token, stringPrefixes))\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\nfunction probablyInString(state, pos, quoteToken, prefixes) {\n    let node = syntaxTree(state).resolveInner(pos, -1);\n    let maxPrefix = prefixes.reduce((m, p) => Math.max(m, p.length), 0);\n    for (let i = 0; i < 5; i++) {\n        let start = state.sliceDoc(node.from, Math.min(node.to, node.from + quoteToken.length + maxPrefix));\n        let quotePos = start.indexOf(quoteToken);\n        if (!quotePos || quotePos > -1 && prefixes.indexOf(start.slice(0, quotePos)) > -1) {\n            let first = node.firstChild;\n            while (first && first.from == node.from && first.to - first.from > quoteToken.length + quotePos) {\n                if (state.sliceDoc(first.to - quoteToken.length, first.to) == quoteToken)\n                    return false;\n                first = first.firstChild;\n            }\n            return true;\n        }\n        let parent = node.to == pos && node.parent;\n        if (!parent)\n            break;\n        node = parent;\n    }\n    return false;\n}\nfunction canStartStringAt(state, pos, prefixes) {\n    let charCat = state.charCategorizer(pos);\n    if (charCat(state.sliceDoc(pos - 1, pos)) != CharCategory.Word)\n        return pos;\n    for (let prefix of prefixes) {\n        let start = pos - prefix.length;\n        if (state.sliceDoc(start, pos) == prefix && charCat(state.sliceDoc(start - 1, start)) != CharCategory.Word)\n            return start;\n    }\n    return -1;\n}\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        commitCharacters,\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space (and Alt-\\` on macOS): [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { mac: \"Alt-`\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.isPending) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* State.Inactive */) ? \"active\" : null;\n}\nconst completionArrayCache = /*@__PURE__*/new WeakMap;\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    if (!open || open.disabled)\n        return [];\n    let completions = completionArrayCache.get(open.options);\n    if (!completions)\n        completionArrayCache.set(open.options, completions = open.options.map(o => o.completion));\n    return completions;\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.options[open.selected].completion : null;\n}\n/**\nReturns the currently selected position in the active completion\nlist, or null if no completions are active.\n*/\nfunction selectedCompletionIndex(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open && !open.disabled && open.selected >= 0 ? open.selected : null;\n}\n/**\nCreate an effect that can be attached to a transaction to change\nthe currently selected completion.\n*/\nfunction setSelectedCompletion(index) {\n    return setSelectedEffect.of(index);\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeBrackets, closeBracketsKeymap, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, deleteBracketPair, hasNextSnippetField, hasPrevSnippetField, ifIn, ifNotIn, insertBracket, insertCompletionText, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, selectedCompletionIndex, setSelectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 4921, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 4927, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/commands/dist/index.js"],"sourcesContent":["import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect, Text, findClusterBreak, countColumn, CharCategory } from '@codemirror/state';\nimport { EditorView, Direction } from '@codemirror/view';\nimport { IndentContext, getIndentation, indentString, matchBrackets, syntaxTree, getIndentUnit, indentUnit } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let { state } = target, line = state.doc.lineAt(state.selection.main.from), config = getConfig(target.state, line.from);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockCommentByLine(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let tr = f(option, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#commands.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* CommentOption.Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* CommentOption.Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* CommentOption.Uncomment */);\n/**\nComment or uncomment the lines around the current selection using\nblock comments.\n*/\nconst toggleBlockCommentByLine = /*@__PURE__*/command((o, s) => changeBlockComment(o, s, selectedLineRanges(s)), 0 /* CommentOption.Toggle */);\nfunction getConfig(state, pos) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\nfunction selectedLineRanges(state) {\n    let ranges = [];\n    for (let r of state.selection.ranges) {\n        let fromLine = state.doc.lineAt(r.from);\n        let toLine = r.to <= fromLine.to ? fromLine : state.doc.lineAt(r.to);\n        if (toLine.from > fromLine.from && toLine.from == r.to)\n            toLine = r.to == fromLine.to + 1 ? fromLine : state.doc.lineAt(r.to - 1);\n        let last = ranges.length - 1;\n        if (last >= 0 && ranges[last].to > fromLine.from)\n            ranges[last].to = toLine.to;\n        else\n            ranges.push({ from: fromLine.from + /^\\s*/.exec(fromLine.text)[0].length, to: toLine.to });\n    }\n    return ranges;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, state, ranges = state.selection.ranges) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* CommentOption.Uncomment */ && !comments.every(c => c)) {\n        return { changes: state.changes(ranges.map((range, i) => {\n                if (comments[i])\n                    return [];\n                return [{ from: range.from, insert: tokens[i].open + \" \" }, { from: range.to, insert: \" \" + tokens[i].close }];\n            })) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, state, ranges = state.selection.ranges) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        let token = getConfig(state, from).line;\n        if (!token)\n            continue;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* CommentOption.Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* CommentOption.Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500,\n            joinToEvent: (_t, isAdjacent) => isAdjacent,\n        }, {\n            minDepth: Math.max,\n            newGroupDelay: Math.min,\n            joinToEvent: (a, b) => (tr, adj) => a(tr, adj) || b(tr, adj)\n        });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr, fromHist.selection), from = fromHist.side;\n            let other = from == 0 /* BranchName.Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* BranchName.Done */ ? fromHist.rest : other, from == 0 /* BranchName.Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config, tr);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* BranchName.Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* BranchName.Undone */, false);\n/**\nUndo a change or selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* BranchName.Done */, true);\n/**\nRedo a change or selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* BranchName.Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* BranchName.Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* BranchName.Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* BranchName.Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, \n    // Accumulated mapping (from addToHistory==false) that should be\n    // applied to events below this one.\n    mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr, selection) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, selection || tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, config, tr) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < config.newGroupDelay &&\n                config.joinToEvent(tr, isAdjacent(lastEvent.changes, event.changes))) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, config.minDepth, new HistEvent(event.changes.compose(lastEvent.changes), conc(StateEffect.mapEffects(event.effects, lastEvent.changes), lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, config.minDepth, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, onlySelection) {\n        let branch = side == 0 /* BranchName.Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1], selection = event.selectionsAfter[0] || state.selection;\n        if (onlySelection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch), selection }),\n                userEvent: side == 0 /* BranchName.Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest, selection }),\n                filter: false,\n                userEvent: side == 0 /* BranchName.Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#commands.undo).\n- Mod-y (Mod-Shift-z on macOS) + Ctrl-Shift-z on Linux: [`redo`](https://codemirror.net/6/docs/ref/#commands.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#commands.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#commands.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { linux: \"Ctrl-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection, true))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\nfunction ltrAtCursor(view) {\n    return view.textDirectionAt(view.state.selection.main.head) == Direction.LTR;\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, !ltrAtCursor(view));\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, ltrAtCursor(view));\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction byCharLogical(state, range, forward) {\n    let pos = range.head, line = state.doc.lineAt(pos);\n    if (pos == (forward ? line.to : line.from))\n        pos = forward ? Math.min(state.doc.length, line.to + 1) : Math.max(0, line.from - 1);\n    else\n        pos = line.from + findClusterBreak(line.text, pos - line.from, forward);\n    return EditorSelection.cursor(pos, forward ? -1 : 1);\n}\nfunction moveByCharLogical(target, forward) {\n    return moveSel(target, range => range.empty ? byCharLogical(target.state, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character forward, in logical\n(non-text-direction-aware) string index order.\n*/\nconst cursorCharForwardLogical = target => moveByCharLogical(target, true);\n/**\nMove the selection one character backward, in logical string index\norder.\n*/\nconst cursorCharBackwardLogical = target => moveByCharLogical(target, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, ltrAtCursor(view));\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction toGroupStart(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start), initial = cat != CharCategory.Space;\n    return (next) => {\n        let nextCat = categorize(next);\n        if (nextCat != CharCategory.Space)\n            return initial && nextCat == cat;\n        initial = false;\n        return true;\n    };\n}\n/**\nMove the cursor one group forward in the default Windows style,\nwhere it moves to the start of the next group.\n*/\nconst cursorGroupForwardWin = view => {\n    return moveSel(view, range => range.empty\n        ? view.moveByChar(range, true, start => toGroupStart(view, range.head, start))\n        : rangeEnd(range, true));\n};\nconst segmenter = typeof Intl != \"undefined\" && Intl.Segmenter ?\n    /*@__PURE__*/new (Intl.Segmenter)(undefined, { granularity: \"word\" }) : null;\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    let cat = CharCategory.Space, pos = range.from, steps = 0;\n    let done = false, sawUpper = false, sawLower = false;\n    let step = (next) => {\n        if (done)\n            return false;\n        pos += forward ? next.length : -next.length;\n        let nextCat = categorize(next), ahead;\n        if (nextCat == CharCategory.Word && next.charCodeAt(0) < 128 && /[\\W_]/.test(next))\n            nextCat = -1; // Treat word punctuation specially\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        if (cat != nextCat)\n            return false;\n        if (cat == CharCategory.Word) {\n            if (next.toLowerCase() == next) {\n                if (!forward && sawUpper)\n                    return false;\n                sawLower = true;\n            }\n            else if (sawLower) {\n                if (forward)\n                    return false;\n                done = true;\n            }\n            else {\n                if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                    ahead.toLowerCase() == ahead)\n                    return false;\n                sawUpper = true;\n            }\n        }\n        steps++;\n        return true;\n    };\n    let end = view.moveByChar(range, forward, start => {\n        step(start);\n        return step;\n    });\n    if (segmenter && cat == CharCategory.Word && end.from == range.from + steps * (forward ? 1 : -1)) {\n        let from = Math.min(range.head, end.head), to = Math.max(range.head, end.head);\n        let skipped = view.state.sliceDoc(from, to);\n        if (skipped.length > 1 && /[\\u4E00-\\uffff]/.test(skipped)) {\n            let segments = Array.from(segmenter.segment(skipped));\n            if (segments.length > 1) {\n                if (forward)\n                    return EditorSelection.cursor(range.head + segments[1].index, -1);\n                return EditorSelection.cursor(end.head + segments[segments.length - 1].index, 1);\n            }\n        }\n    }\n    return end;\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction pageInfo(view) {\n    let selfScroll = view.scrollDOM.clientHeight < view.scrollDOM.scrollHeight - 2;\n    let marginTop = 0, marginBottom = 0, height;\n    if (selfScroll) {\n        for (let source of view.state.facet(EditorView.scrollMargins)) {\n            let margins = source(view);\n            if (margins === null || margins === void 0 ? void 0 : margins.top)\n                marginTop = Math.max(margins === null || margins === void 0 ? void 0 : margins.top, marginTop);\n            if (margins === null || margins === void 0 ? void 0 : margins.bottom)\n                marginBottom = Math.max(margins === null || margins === void 0 ? void 0 : margins.bottom, marginBottom);\n        }\n        height = view.scrollDOM.clientHeight - marginTop - marginBottom;\n    }\n    else {\n        height = (view.dom.ownerDocument.defaultView || window).innerHeight;\n    }\n    return { marginTop, marginBottom, selfScroll,\n        height: Math.max(view.defaultLineHeight, height - 5) };\n}\nfunction cursorByPage(view, forward) {\n    let page = pageInfo(view);\n    let { state } = view, selection = updateSel(state.selection, range => {\n        return range.empty ? view.moveVertically(range, forward, page.height)\n            : rangeEnd(range, forward);\n    });\n    if (selection.eq(state.selection))\n        return false;\n    let effect;\n    if (page.selfScroll) {\n        let startPos = view.coordsAtPos(state.selection.main.head);\n        let scrollRect = view.scrollDOM.getBoundingClientRect();\n        let scrollTop = scrollRect.top + page.marginTop, scrollBottom = scrollRect.bottom - page.marginBottom;\n        if (startPos && startPos.top > scrollTop && startPos.bottom < scrollBottom)\n            effect = EditorView.scrollIntoView(selection.main.head, { y: \"start\", yMargin: startPos.top - scrollTop });\n    }\n    view.dispatch(setSel(state, selection), { effects: effect });\n    return true;\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection one line wrap point to the left.\n*/\nconst cursorLineBoundaryLeft = view => moveSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection one line wrap point to the right.\n*/\nconst cursorLineBoundaryRight = view => moveSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(target, how) {\n    let selection = updateSel(target.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn, head.bidiLevel || undefined);\n    });\n    if (selection.eq(target.state.selection))\n        return false;\n    target.dispatch(setSel(target.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, !ltrAtCursor(view));\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, ltrAtCursor(view));\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\n/**\nMove the selection head one character forward by logical\n(non-direction aware) string index order.\n*/\nconst selectCharForwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, true));\n/**\nMove the selection head one character backward by logical string\nindex order.\n*/\nconst selectCharBackwardLogical = target => extendSel(target, range => byCharLogical(target.state, range, false));\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, !ltrAtCursor(view));\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, ltrAtCursor(view));\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\n/**\nMove the selection head one group forward in the default Windows\nstyle, skipping to the start of the next group.\n*/\nconst selectGroupForwardWin = view => {\n    return extendSel(view, range => view.moveByChar(range, true, start => toGroupStart(view, range.head, start)));\n};\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, !ltrAtCursor(view)));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, ltrAtCursor(view)));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, pageInfo(view).height));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head one line boundary to the left.\n*/\nconst selectLineBoundaryLeft = view => extendSel(view, range => moveByLineBoundary(view, range, !ltrAtCursor(view)));\n/**\nMove the selection head one line boundary to the right.\n*/\nconst selectLineBoundaryRight = view => extendSel(view, range => moveByLineBoundary(view, range, ltrAtCursor(view)));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        let tree = syntaxTree(state), stack = tree.resolveStack(range.from, 1);\n        if (range.empty) {\n            let stackBefore = tree.resolveStack(range.from, -1);\n            if (stackBefore.node.from >= stack.node.from && stackBefore.node.to <= stack.node.to)\n                stack = stackBefore;\n        }\n        for (let cur = stack; cur; cur = cur.next) {\n            let { node } = cur;\n            if (((node.from < range.from && node.to >= range.to) ||\n                (node.to > range.to && node.from <= range.from)) &&\n                cur.next)\n                return EditorSelection.range(node.to, node.from);\n        }\n        return range;\n    });\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy(target, by) {\n    if (target.state.readOnly)\n        return false;\n    let event = \"delete.selection\", { state } = target;\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(range);\n            if (towards < from) {\n                event = \"delete.backward\";\n                towards = skipAtomic(target, towards, false);\n            }\n            else if (towards > from) {\n                event = \"delete.forward\";\n                towards = skipAtomic(target, towards, true);\n            }\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        else {\n            from = skipAtomic(target, from, false);\n            to = skipAtomic(target, to, true);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from, from < range.head ? -1 : 1) };\n    });\n    if (changes.changes.empty)\n        return false;\n    target.dispatch(state.update(changes, {\n        scrollIntoView: true,\n        userEvent: event,\n        effects: event == \"delete.selection\" ? EditorView.announce.of(state.phrase(\"Selection deleted\")) : undefined\n    }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.state.facet(EditorView.atomicRanges).map(f => f(target)))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward, byIndentUnit) => deleteBy(target, range => {\n    let pos = range.from, { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (byIndentUnit && !forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n        else if (!forward && /[\\ufe00-\\ufe0f]/.test(line.text.slice(targetPos - line.from, pos - line.from)))\n            targetPos = findClusterBreak(line.text, targetPos - line.from, false, false) + line.from;\n    }\n    return targetPos;\n});\n/**\nDelete the selection, or, for cursor selections, the character or\nindentation unit before the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false, true);\n/**\nDelete the selection or the character before the cursor. Does not\nimplement any extended behavior like deleting whole indentation\nunits in one go.\n*/\nconst deleteCharBackwardStrict = view => deleteByChar(view, false, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true, false);\nconst deleteByGroup = (target, forward) => deleteBy(target, range => {\n    let pos = range.head, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == range.head && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != range.head)\n            cat = nextCat;\n        pos = next;\n    }\n    return pos;\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, range => {\n    let lineEnd = view.lineBlockAt(range.head).to;\n    return range.head < lineEnd ? lineEnd : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, range => {\n    let lineStart = view.lineBlockAt(range.head).from;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line or the next line wrap before the cursor.\n*/\nconst deleteLineBoundaryBackward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, false).head;\n    return range.head > lineStart ? lineStart : Math.max(0, range.head - 1);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line or the next line wrap after the cursor.\n*/\nconst deleteLineBoundaryForward = view => deleteBy(view, range => {\n    let lineStart = view.moveToLineBoundary(range, true).head;\n    return range.head < lineStart ? lineStart : Math.min(view.state.doc.length, range.head + 1);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => {\n        let dist = undefined;\n        if (view.lineWrapping) {\n            let block = view.lineBlockAt(range.head), pos = view.coordsAtPos(range.head, range.assoc || 1);\n            if (pos)\n                dist = (block.bottom + view.documentTop) - pos.bottom + view.defaultLineHeight / 2;\n        }\n        return view.moveVertically(range, true, dist);\n    }).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nReplace the selection with a newline and the same amount of\nindentation as the line above.\n*/\nconst insertNewlineKeepIndent = ({ state, dispatch }) => {\n    dispatch(state.update(state.changeByRange(range => {\n        let indent = /^\\s*/.exec(state.doc.lineAt(range.from).text)[0];\n        return {\n            changes: { from: range.from, to: range.to, insert: state.lineBreak + indent },\n            range: EditorSelection.cursor(range.from + indent.length + 1)\n        };\n    }), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from &&\n        !/\\S/.test(state.sliceDoc(before.to, after.from)))\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = countColumn(/^\\s*/.exec(state.doc.lineAt(from).text)[0], state.tabSize);\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nEnables or disables\n[tab-focus mode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode). While on, this\nprevents the editor's key bindings from capturing Tab or\nShift-Tab, making it possible for the user to move focus out of\nthe editor with the keyboard.\n*/\nconst toggleTabFocusMode = view => {\n    view.setTabFocusMode();\n    return true;\n};\n/**\nTemporarily enables [tab-focus\nmode](https://codemirror.net/6/docs/ref/#view.EditorView.setTabFocusMode) for two seconds or until\nanother key is pressed.\n*/\nconst temporarilySetTabFocusMode = view => {\n    view.setTabFocusMode(2000);\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter and Shift-Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryBackward).\n - Cmd-Delete (macOS): [`deleteLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.deleteLineBoundaryForward).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft, preventDefault: true },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryLeft, shift: selectLineBoundaryLeft, preventDefault: true },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight, preventDefault: true },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryRight, shift: selectLineBoundaryRight, preventDefault: true },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward, preventDefault: true },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward, preventDefault: true },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent, shift: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteLineBoundaryBackward },\n    { mac: \"Mod-Delete\", run: deleteLineBoundaryForward }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Cmd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n- Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#commands.toggleComment).\n- Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#commands.toggleBlockComment).\n- Ctrl-m (Alt-Shift-m on macOS): [`toggleTabFocusMode`](https://codemirror.net/6/docs/ref/#commands.toggleTabFocusMode).\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket },\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment },\n    { key: \"Ctrl-m\", mac: \"Shift-Alt-m\", run: toggleTabFocusMode },\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { blockComment, blockUncomment, copyLineDown, copyLineUp, cursorCharBackward, cursorCharBackwardLogical, cursorCharForward, cursorCharForwardLogical, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupForwardWin, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineBoundaryLeft, cursorLineBoundaryRight, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharBackwardStrict, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteLineBoundaryBackward, deleteLineBoundaryForward, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, history, historyField, historyKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertNewlineKeepIndent, insertTab, invertedEffects, isolateHistory, lineComment, lineUncomment, moveLineDown, moveLineUp, redo, redoDepth, redoSelection, selectAll, selectCharBackward, selectCharBackwardLogical, selectCharForward, selectCharForwardLogical, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupForwardWin, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineBoundaryLeft, selectLineBoundaryRight, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, temporarilySetTabFocusMode, toggleBlockComment, toggleBlockCommentByLine, toggleComment, toggleLineComment, toggleTabFocusMode, transposeChars, undo, undoDepth, undoSelection };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 6989, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 6995, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/search/dist/index.js"],"sourcesContent":["import { showPanel, EditorView, getPanel, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { codePointAt, fromCodePoint, codePointSize, StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, RangeSetBuilder, Prec, EditorState, findClusterBreak } from '@codemirror/state';\nimport elt from 'crelt';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize, test) {\n        this.test = test;\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            if (norm.length)\n                for (let i = 0, pos = start;; i++) {\n                    let code = norm.charCodeAt(i);\n                    let match = this.match(code, pos, this.bufferPos + this.bufferStart);\n                    if (i == norm.length - 1) {\n                        if (match) {\n                            this.value = match;\n                            return this;\n                        }\n                        break;\n                    }\n                    if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                        pos++;\n                }\n        }\n    }\n    match(code, pos, end) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: end };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: end };\n            else\n                this.matches.push(1, pos);\n        }\n        if (match && this.test && !this.test(match.from, match.to, this.buffer, this.bufferStart))\n            match = null;\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.text = text;\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = toCharEnd(text, from);\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                if (from == this.curLineStart + this.curLine.length)\n                    this.nextLine();\n                if ((from < to || from > this.value.to) && (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = toCharEnd(text, from);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.test = options === null || options === void 0 ? void 0 : options.test;\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Chunk.Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                // If a match goes almost to the end of a noncomplete chunk, try\n                // again, since it'll likely be able to match more\n                if ((this.flat.to >= this.to || match.index + match[0].length <= this.flat.text.length - 10) &&\n                    (!this.test || this.test(from, to, match))) {\n                    this.value = { from, to, match };\n                    this.matchPos = toCharEnd(this.text, to + (from == to ? 1 : 0));\n                    return this;\n                }\n            }\n            if (this.flat.to == this.to) {\n                this.done = true;\n                return this;\n            }\n            // Grow the flattened doc\n            this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\nfunction toCharEnd(text, pos) {\n    if (pos >= text.length)\n        return pos;\n    let line = text.lineAt(pos), next;\n    while (pos < line.to && (next = line.text.charCodeAt(pos - line.from)) >= 0xDC00 && next < 0xE000)\n        pos++;\n    return pos;\n}\n\nfunction createLineDialog(view) {\n    let line = String(view.state.doc.lineAt(view.state.selection.main.head).number);\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\", value: line });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        let selection = EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length)));\n        view.dispatch({\n            effects: [dialogEffect.of(false), EditorView.scrollIntoView(selection.from, { y: 'center' })],\n            selection,\n        });\n        view.focus();\n    }\n    return { dom };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").select();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100,\n    wholeWords: false\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\n// Whether the characters directly outside the given positions are non-word characters\nfunction insideWordBoundaries(check, state, from, to) {\n    return (from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n        (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word);\n}\n// Whether the characters directly at the given positions are word characters\nfunction insideWord(check, state, from, to) {\n    return check(state.sliceDoc(from, from + 1)) == CharCategory.Word\n        && check(state.sliceDoc(to - 1, to)) == CharCategory.Word;\n}\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            if (conf.wholeWords) {\n                query = state.sliceDoc(range.from, range.to); // TODO: allow and include leading/trailing space?\n                check = state.charCategorizer(range.head);\n                if (!(insideWordBoundaries(check, state, range.from, range.to) &&\n                    insideWord(check, state, range.from, range.to)))\n                    return Decoration.none;\n            }\n            else {\n                query = state.sliceDoc(range.from, range.to);\n                if (!query)\n                    return Decoration.none;\n            }\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || insideWordBoundaries(check, state, from, to)) {\n                    if (range.empty && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection. Expand selection\nto the surrounding word when the selection is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        effects: EditorView.scrollIntoView(range.to)\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            top: false,\n            caseSensitive: false,\n            literal: false,\n            regexp: false,\n            wholeWord: false,\n            createPanel: view => new SearchPanel(view),\n            scrollToMatch: range => EditorView.scrollIntoView(range)\n        });\n    }\n});\n/**\nAdd search state to the editor configuration, and optionally\nconfigure the search extension.\n([`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) will automatically\nenable this if it isn't already on).\n*/\nfunction search(config) {\n    return config ? [searchConfigFacet.of(config), searchExtensions] : searchExtensions;\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.literal = !!config.literal;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n        this.unquoted = this.unquote(this.search);\n        this.wholeWord = !!config.wholeWord;\n    }\n    /**\n    @internal\n    */\n    unquote(text) {\n        return this.literal ? text :\n            text.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp &&\n            this.wholeWord == other.wholeWord;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n    /**\n    Get a search cursor for this query, searching through the given\n    range in the given state.\n    */\n    getCursor(state, from = 0, to) {\n        let st = state.doc ? state : EditorState.create({ doc: state });\n        if (to == null)\n            to = st.doc.length;\n        return this.regexp ? regexpCursor(this, st, from, to) : stringCursor(this, st, from, to);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nfunction stringCursor(spec, state, from, to) {\n    return new SearchCursor(state.doc, spec.unquoted, from, to, spec.caseSensitive ? undefined : x => x.toLowerCase(), spec.wholeWord ? stringWordTest(state.doc, state.charCategorizer(state.selection.main.head)) : undefined);\n}\nfunction stringWordTest(doc, categorizer) {\n    return (from, to, buf, bufPos) => {\n        if (bufPos > from || bufPos + buf.length < to) {\n            bufPos = Math.max(0, from - 2);\n            buf = doc.sliceString(bufPos, Math.min(doc.length, to + 2));\n        }\n        return (categorizer(charBefore(buf, from - bufPos)) != CharCategory.Word ||\n            categorizer(charAfter(buf, from - bufPos)) != CharCategory.Word) &&\n            (categorizer(charAfter(buf, to - bufPos)) != CharCategory.Word ||\n                categorizer(charBefore(buf, to - bufPos)) != CharCategory.Word);\n    };\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n    }\n    nextMatch(state, curFrom, curTo) {\n        let cursor = stringCursor(this.spec, state, curTo, state.doc.length).nextOverlapping();\n        if (cursor.done) {\n            let end = Math.min(state.doc.length, curFrom + this.spec.unquoted.length);\n            cursor = stringCursor(this.spec, state, 0, end).nextOverlapping();\n        }\n        return cursor.done || cursor.value.from == curFrom && cursor.value.to == curTo ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing an inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(state, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* FindPrev.ChunkSize */ - this.spec.unquoted.length);\n            let cursor = stringCursor(this.spec, state, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* FindPrev.ChunkSize */;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        let found = this.prevMatchInRange(state, 0, curFrom);\n        if (!found)\n            found = this.prevMatchInRange(state, Math.max(0, curTo - this.spec.unquoted.length), state.doc.length);\n        return found && (found.from != curFrom || found.to != curTo) ? found : null;\n    }\n    getReplacement(_result) { return this.spec.unquote(this.spec.replace); }\n    matchAll(state, limit) {\n        let cursor = stringCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = stringCursor(this.spec, state, Math.max(0, from - this.spec.unquoted.length), Math.min(to + this.spec.unquoted.length, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nfunction regexpCursor(spec, state, from, to) {\n    return new RegExpCursor(state.doc, spec.search, {\n        ignoreCase: !spec.caseSensitive,\n        test: spec.wholeWord ? regexpWordTest(state.charCategorizer(state.selection.main.head)) : undefined\n    }, from, to);\n}\nfunction charBefore(str, index) {\n    return str.slice(findClusterBreak(str, index, false), index);\n}\nfunction charAfter(str, index) {\n    return str.slice(index, findClusterBreak(str, index));\n}\nfunction regexpWordTest(categorizer) {\n    return (_from, _to, match) => !match[0].length ||\n        (categorizer(charBefore(match.input, match.index)) != CharCategory.Word ||\n            categorizer(charAfter(match.input, match.index)) != CharCategory.Word) &&\n            (categorizer(charAfter(match.input, match.index + match[0].length)) != CharCategory.Word ||\n                categorizer(charBefore(match.input, match.index + match[0].length)) != CharCategory.Word);\n}\nclass RegExpQuery extends QueryType {\n    nextMatch(state, curFrom, curTo) {\n        let cursor = regexpCursor(this.spec, state, curTo, state.doc.length).next();\n        if (cursor.done)\n            cursor = regexpCursor(this.spec, state, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(state, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* FindPrev.ChunkSize */);\n            let cursor = regexpCursor(this.spec, state, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(state, curFrom, curTo) {\n        return this.prevMatchInRange(state, 0, curFrom) ||\n            this.prevMatchInRange(state, curTo, state.doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.unquote(this.spec.replace).replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(state, limit) {\n        let cursor = regexpCursor(this.spec, state, 0, state.doc.length), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(state, from, to, add) {\n        let cursor = regexpCursor(this.spec, state, Math.max(0, from - 250 /* RegExp.HighlightMargin */), Math.min(to + 250 /* RegExp.HighlightMargin */, state.doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query. Note that\nthis only has an effect if the search state has been initialized\n(by including [`search`](https://codemirror.net/6/docs/ref/#search.search) in your configuration or\nby running [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel) at least\nonce).\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), null);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\n/**\nQuery whether the search panel is open in the given editor state.\n*/\nfunction searchPanelOpen(state) {\n    var _a;\n    return ((_a = state.field(searchState, false)) === null || _a === void 0 ? void 0 : _a.panel) != null;\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet || update.viewportChanged)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* RegExp.HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { to } = view.state.selection.main;\n    let next = query.nextMatch(view.state, to, to);\n    if (!next)\n        return false;\n    let selection = EditorSelection.single(next.from, next.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, next), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from } = state.selection.main;\n    let prev = query.prevMatch(state, from, from);\n    if (!prev)\n        return false;\n    let selection = EditorSelection.single(prev.from, prev.to);\n    let config = view.state.facet(searchConfigFacet);\n    view.dispatch({\n        selection,\n        effects: [announceMatch(view, prev), config.scrollToMatch(selection.main, view)],\n        userEvent: \"select.search\"\n    });\n    selectSearchInput(view);\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let match = query.nextMatch(state, from, from);\n    if (!match)\n        return false;\n    let next = match;\n    let changes = [], selection, replacement;\n    let effects = [];\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state, next.from, next.to);\n        effects.push(EditorView.announce.of(state.phrase(\"replaced match on line $\", state.doc.lineAt(from).number) + \".\"));\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= match.to ? 0 : match.to - match.from - replacement.length;\n        selection = EditorSelection.single(next.from - off, next.to - off);\n        effects.push(announceMatch(view, next));\n        effects.push(state.facet(searchConfigFacet).scrollToMatch(selection.main, view));\n    }\n    view.dispatch({\n        changes, selection, effects,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    let announceText = view.state.phrase(\"replaced $ matches\", changes.length) + \".\";\n    view.dispatch({\n        changes,\n        effects: EditorView.announce.of(announceText),\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a, _b, _c, _d, _e;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    if (fallback && !selText)\n        return fallback;\n    let config = state.facet(searchConfigFacet);\n    return new SearchQuery({\n        search: ((_a = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _a !== void 0 ? _a : config.literal) ? selText : selText.replace(/\\n/g, \"\\\\n\"),\n        caseSensitive: (_b = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _b !== void 0 ? _b : config.caseSensitive,\n        literal: (_c = fallback === null || fallback === void 0 ? void 0 : fallback.literal) !== null && _c !== void 0 ? _c : config.literal,\n        regexp: (_d = fallback === null || fallback === void 0 ? void 0 : fallback.regexp) !== null && _d !== void 0 ? _d : config.regexp,\n        wholeWord: (_e = fallback === null || fallback === void 0 ? void 0 : fallback.wholeWord) !== null && _e !== void 0 ? _e : config.wholeWord\n    });\n}\nfunction getSearchInput(view) {\n    let panel = getPanel(view, createSearchPanel);\n    return panel && panel.dom.querySelector(\"[main-field]\");\n}\nfunction selectSearchInput(view) {\n    let input = getSearchInput(view);\n    if (input && input == view.root.activeElement)\n        input.select();\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let searchInput = getSearchInput(view);\n        if (searchInput && searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Mod-Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Mod-Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            form: \"\",\n            \"main-field\": \"true\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            form: \"\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            form: \"\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            form: \"\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        this.wordField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"word\",\n            form: \"\",\n            checked: query.wholeWord,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            elt(\"label\", null, [this.wordField, phrase(view, \"by word\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")])\n            ],\n            elt(\"button\", {\n                name: \"close\",\n                onclick: () => closeSearchPanel(view),\n                \"aria-label\": phrase(view, \"close\"),\n                type: \"button\"\n            }, [\"×\"])\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            wholeWord: this.wordField.checked,\n            replace: this.replaceField.value,\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n        this.wordField.checked = query.wholeWord;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let line = view.state.doc.lineAt(from), lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(line.from, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != line.from) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${line.number}.`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.low(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, search, searchKeymap, searchPanelOpen, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 8272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 8278, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/lint/dist/index.js"],"sourcesContent":["import { Decoration, showPanel, EditorView, ViewPlugin, gutter, showTooltip, hoverTooltip, getPanel, logException, WidgetType, GutterMarker } from '@codemirror/view';\nimport { StateEffect, StateField, Facet, combineConfig, RangeSet, RangeSetBuilder } from '@codemirror/state';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        // Filter the list of diagnostics for which to create markers\n        let markedDiagnostics = diagnostics;\n        let diagnosticFilter = state.facet(lintConfig).markerFilter;\n        if (diagnosticFilter)\n            markedDiagnostics = diagnosticFilter(markedDiagnostics, state);\n        let sorted = diagnostics.slice().sort((a, b) => a.from - b.from || a.to - b.to);\n        let deco = new RangeSetBuilder(), active = [], pos = 0;\n        for (let i = 0;;) {\n            let next = i == sorted.length ? null : sorted[i];\n            if (!next && !active.length)\n                break;\n            let from, to;\n            if (active.length) {\n                from = pos;\n                to = active.reduce((p, d) => Math.min(p, d.to), next && next.from > from ? next.from : 1e8);\n            }\n            else {\n                from = next.from;\n                to = next.to;\n                active.push(next);\n                i++;\n            }\n            while (i < sorted.length) {\n                let next = sorted[i];\n                if (next.from == from && (next.to > next.from || next.to == from)) {\n                    active.push(next);\n                    i++;\n                    to = Math.min(next.to, to);\n                }\n                else {\n                    to = Math.min(next.from, to);\n                    break;\n                }\n            }\n            let sev = maxSeverity(active);\n            if (active.some(d => d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from))) {\n                deco.add(from, from, Decoration.widget({\n                    widget: new DiagnosticWidget(sev),\n                    diagnostics: active.slice()\n                }));\n            }\n            else {\n                let markClass = active.reduce((c, d) => d.markClass ? c + \" \" + d.markClass : c, \"\");\n                deco.add(from, to, Decoration.mark({\n                    class: \"cm-lintRange cm-lintRange-\" + sev + markClass,\n                    diagnostics: active.slice(),\n                    inclusiveEnd: active.some(a => a.to > to)\n                }));\n            }\n            pos = to;\n            for (let i = 0; i < active.length; i++)\n                if (active[i].to <= pos)\n                    active.splice(i--, 1);\n        }\n        let set = deco.finish();\n        return new LintState(set, panel, findDiagnostic(set));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostics.indexOf(diagnostic) < 0)\n            return;\n        if (!found)\n            found = new SelectedDiagnostic(from, to, diagnostic || spec.diagnostics[0]);\n        else if (spec.diagnostics.indexOf(found.diagnostic) < 0)\n            return false;\n        else\n            found = new SelectedDiagnostic(found.from, to, found.diagnostic);\n    });\n    return found;\n}\nfunction hideTooltip(tr, tooltip) {\n    let from = tooltip.pos, to = tooltip.end || from;\n    let result = tr.state.facet(lintConfig).hideOn(tr, from, to);\n    if (result != null)\n        return result;\n    let line = tr.startState.doc.lineAt(tooltip.pos);\n    return !!(tr.effects.some(e => e.is(setDiagnosticsEffect)) || tr.changes.touchesRange(line.from, Math.max(line.to, to)));\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of(lintExtensions));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged && value.diagnostics.size) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null, panel = value.panel;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            if (!mapped.size && panel && tr.state.facet(lintConfig).autoPanel)\n                panel = null;\n            value = new LintState(mapped, panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let panel = !tr.state.facet(lintConfig).autoPanel ? value.panel : effect.value.length ? LintPanel.open : null;\n                value = LintState.init(effect.value, panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found, start = -1, end = -1;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found = spec.diagnostics;\n            start = from;\n            end = to;\n            return false;\n        }\n    });\n    let diagnosticFilter = view.state.facet(lintConfig).tooltipFilter;\n    if (found && diagnosticFilter)\n        found = diagnosticFilter(found, view.state);\n    if (!found)\n        return null;\n    return {\n        pos: start,\n        end: end,\n        above: view.state.doc.lineAt(start).to < end,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nMove the selection to the previous diagnostic.\n*/\nconst previousDiagnostic = (view) => {\n    let { state } = view, field = state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = state.selection.main;\n    let prevFrom, prevTo, lastFrom, lastTo;\n    field.diagnostics.between(0, state.doc.length, (from, to) => {\n        if (to < sel.to && (prevFrom == null || prevFrom < from)) {\n            prevFrom = from;\n            prevTo = to;\n        }\n        if (lastFrom == null || from > lastFrom) {\n            lastFrom = from;\n            lastTo = to;\n        }\n    });\n    if (lastFrom == null || prevFrom == null && lastFrom == sel.from)\n        return false;\n    view.dispatch({ selection: { anchor: prevFrom !== null && prevFrom !== void 0 ? prevFrom : lastFrom, head: prevTo !== null && prevTo !== void 0 ? prevTo : lastTo }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel, preventDefault: true },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintConfig);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        clearTimeout(this.timeout);\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            this.timeout = setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintConfig);\n            if (sources.length)\n                batchResults(sources.map(s => Promise.resolve(s(this.view))), annotations => {\n                    if (this.view.state.doc == state.doc)\n                        this.view.dispatch(setDiagnostics(this.view.state, annotations.reduce((a, b) => a.concat(b))));\n                }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let config = update.state.facet(lintConfig);\n        if (update.docChanged || config != update.startState.facet(lintConfig) ||\n            config.needsRefresh && config.needsRefresh(update)) {\n            this.lintTime = Date.now() + config.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, config.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nfunction batchResults(promises, sink, error) {\n    let collected = [], timeout = -1;\n    for (let p of promises)\n        p.then(value => {\n            collected.push(value);\n            clearTimeout(timeout);\n            if (collected.length == promises.length)\n                sink(collected);\n            else\n                timeout = setTimeout(() => sink(collected), 200);\n        }, error);\n}\nconst lintConfig = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return Object.assign({ sources: input.map(i => i.source).filter(x => x != null) }, combineConfig(input.map(i => i.config), {\n            delay: 750,\n            markerFilter: null,\n            tooltipFilter: null,\n            needsRefresh: null,\n            hideOn: () => null,\n        }, {\n            needsRefresh: (a, b) => !a ? b : !b ? a : u => a(u) || b(u)\n        }));\n    }\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed). If `null` is given as\nsource, this only configures the lint extension.\n*/\nfunction linter(source, config = {}) {\n    return [\n        lintConfig.of({ source, config }),\n        lintPlugin,\n        lintExtensions\n    ];\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.renderMessage ? diagnostic.renderMessage(view) : diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let fired = false, click = (e) => {\n            e.preventDefault();\n            if (fired)\n                return;\n            fired = true;\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(sev) {\n        super();\n        this.sev = sev;\n    }\n    eq(other) { return other.sev == this.sev; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.sev });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        let seen = new Set();\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            for (let diagnostic of spec.diagnostics) {\n                if (seen.has(diagnostic))\n                    continue;\n                seen.add(diagnostic);\n                let found = -1, item;\n                for (let j = i; j < this.items.length; j++)\n                    if (this.items[j].diagnostic == diagnostic) {\n                        found = j;\n                        break;\n                    }\n                if (found < 0) {\n                    item = new PanelItem(this.view, diagnostic);\n                    this.items.splice(i, 0, item);\n                    needsSync = true;\n                }\n                else {\n                    item = this.items[found];\n                    if (found > i) {\n                        this.items.splice(i, found - i);\n                        needsSync = true;\n                    }\n                }\n                if (selected && item.diagnostic == selected.diagnostic) {\n                    if (!item.dom.hasAttribute(\"aria-selected\")) {\n                        item.dom.setAttribute(\"aria-selected\", \"true\");\n                        newSelectedItem = item;\n                    }\n                }\n                else if (item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.removeAttribute(\"aria-selected\");\n                }\n                i++;\n            }\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    let scaleY = panel.height / this.list.offsetHeight;\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= (panel.top - sel.top) / scaleY;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += (sel.bottom - panel.bottom) / scaleY;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnostic-hint\": { borderLeft: \"5px solid #66d\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\",\n        cursor: \"pointer\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-hint\": { backgroundImage: /*@__PURE__*/underline(\"#66d\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-lintPoint-hint\": {\n        \"&:after\": { borderBottomColor: \"#66d\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nfunction severityWeight(sev) {\n    return sev == \"error\" ? 4 : sev == \"warning\" ? 3 : sev == \"info\" ? 2 : 1;\n}\nfunction maxSeverity(diagnostics) {\n    let sev = \"hint\", weight = 1;\n    for (let d of diagnostics) {\n        let w = severityWeight(d.severity);\n        if (w > weight) {\n            weight = w;\n            sev = d.severity;\n        }\n    }\n    return sev;\n}\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = maxSeverity(diagnostics);\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        let diagnostics = this.diagnostics;\n        let diagnosticsFilter = view.state.facet(lintGutterConfig).tooltipFilter;\n        if (diagnosticsFilter)\n            diagnostics = diagnosticsFilter(diagnostics, view.state);\n        if (diagnostics.length)\n            elt.onmouseover = () => gutterMarkerMouseOver(view, elt, diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Hover.Margin */ && event.clientX < rect.right + 10 /* Hover.Margin */ &&\n            event.clientY > rect.top - 10 /* Hover.Margin */ && event.clientY < rect.bottom + 10 /* Hover.Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.elementAtHeight(marker.getBoundingClientRect().top + 5 - view.documentTop);\n        const linePos = view.coordsAtPos(line.from);\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    clip: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            getCoords: () => marker.getBoundingClientRect()\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let { hoverTime } = view.state.facet(lintGutterConfig);\n    let hoverTimeout = setTimeout(hovered, hoverTime);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, hoverTime);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n    widgetMarker: (view, widget, block) => {\n        let diagnostics = [];\n        view.state.field(lintGutterMarkers).between(block.from, block.to, (from, to, value) => {\n            if (from > block.from && from < block.to)\n                diagnostics.push(...value.diagnostics);\n        });\n        return diagnostics.length ? new LintGutterMarker(diagnostics) : null;\n    }\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        let diagnosticFilter = tr.state.facet(lintGutterConfig).markerFilter;\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                let diagnostics = effect.value;\n                if (diagnosticFilter)\n                    diagnostics = diagnosticFilter(diagnostics || [], tr.state);\n                markers = markersForDiagnostics(tr.state.doc, diagnostics.slice(0));\n            }\n        }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = hideTooltip(tr, tooltip) ? null : Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \".2em\"\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\"\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\nconst lintExtensions = [\n    lintState,\n    /*@__PURE__*/EditorView.decorations.compute([lintState], state => {\n        let { selected, panel } = state.field(lintState);\n        return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n            activeMark.range(selected.from, selected.to)\n        ]);\n    }),\n    /*@__PURE__*/hoverTooltip(lintTooltip, { hideOn: hideTooltip }),\n    baseTheme\n];\nconst lintGutterConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            hoverTime: 300 /* Hover.Time */,\n            markerFilter: null,\n            tooltipFilter: null\n        });\n    }\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter(config = {}) {\n    return [lintGutterConfig.of(config), lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n/**\nIterate over the marked diagnostics for the given editor state,\ncalling `f` for each of them. Note that, if the document changed\nsince the diagnostics were created, the `Diagnostic` object will\nhold the original outdated position, whereas the `to` and `from`\narguments hold the diagnostic's current position.\n*/\nfunction forEachDiagnostic(state, f) {\n    let lState = state.field(lintState, false);\n    if (lState && lState.diagnostics.size) {\n        let pending = [], pendingStart = [], lastEnd = -1;\n        for (let iter = RangeSet.iter([lState.diagnostics]);; iter.next()) {\n            for (let i = 0; i < pending.length; i++)\n                if (!iter.value || iter.value.spec.diagnostics.indexOf(pending[i]) < 0) {\n                    f(pending[i], pendingStart[i], lastEnd);\n                    pending.splice(i, 1);\n                    pendingStart.splice(i--, 1);\n                }\n            if (!iter.value)\n                break;\n            for (let d of iter.value.spec.diagnostics)\n                if (pending.indexOf(d) < 0) {\n                    pending.push(d);\n                    pendingStart.push(iter.from);\n                }\n            lastEnd = iter.to;\n        }\n    }\n}\n\nexport { closeLintPanel, diagnosticCount, forEachDiagnostic, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, previousDiagnostic, setDiagnostics, setDiagnosticsEffect };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9215, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9221, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/theme-one-dark/dist/index.js"],"sourcesContent":["import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, syntaxHighlighting } from '@codemirror/language';\nimport { tags } from '@lezer/highlight';\n\n// Using https://github.com/one-dark/vscode-one-dark-theme/ as reference for the colors\nconst chalky = \"#e5c07b\", coral = \"#e06c75\", cyan = \"#56b6c2\", invalid = \"#ffffff\", ivory = \"#abb2bf\", stone = \"#7d8799\", // Brightened compared to original to increase contrast\nmalibu = \"#61afef\", sage = \"#98c379\", whiskey = \"#d19a66\", violet = \"#c678dd\", darkBackground = \"#21252b\", highlightBackground = \"#2c313a\", background = \"#282c34\", tooltipBackground = \"#353a42\", selection = \"#3E4451\", cursor = \"#528bff\";\n/**\nThe colors used in the theme, as CSS color strings.\n*/\nconst color = {\n    chalky,\n    coral,\n    cyan,\n    invalid,\n    ivory,\n    stone,\n    malibu,\n    sage,\n    whiskey,\n    violet,\n    darkBackground,\n    highlightBackground,\n    background,\n    tooltipBackground,\n    selection,\n    cursor\n};\n/**\nThe editor theme styles for One Dark.\n*/\nconst oneDarkTheme = /*@__PURE__*/EditorView.theme({\n    \"&\": {\n        color: ivory,\n        backgroundColor: background\n    },\n    \".cm-content\": {\n        caretColor: cursor\n    },\n    \".cm-cursor, .cm-dropCursor\": { borderLeftColor: cursor },\n    \"&.cm-focused > .cm-scroller > .cm-selectionLayer .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": { backgroundColor: selection },\n    \".cm-panels\": { backgroundColor: darkBackground, color: ivory },\n    \".cm-panels.cm-panels-top\": { borderBottom: \"2px solid black\" },\n    \".cm-panels.cm-panels-bottom\": { borderTop: \"2px solid black\" },\n    \".cm-searchMatch\": {\n        backgroundColor: \"#72a1ff59\",\n        outline: \"1px solid #457dff\"\n    },\n    \".cm-searchMatch.cm-searchMatch-selected\": {\n        backgroundColor: \"#6199ff2f\"\n    },\n    \".cm-activeLine\": { backgroundColor: \"#6699ff0b\" },\n    \".cm-selectionMatch\": { backgroundColor: \"#aafe661a\" },\n    \"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\": {\n        backgroundColor: \"#bad0f847\"\n    },\n    \".cm-gutters\": {\n        backgroundColor: background,\n        color: stone,\n        border: \"none\"\n    },\n    \".cm-activeLineGutter\": {\n        backgroundColor: highlightBackground\n    },\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"#ddd\"\n    },\n    \".cm-tooltip\": {\n        border: \"none\",\n        backgroundColor: tooltipBackground\n    },\n    \".cm-tooltip .cm-tooltip-arrow:before\": {\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\"\n    },\n    \".cm-tooltip .cm-tooltip-arrow:after\": {\n        borderTopColor: tooltipBackground,\n        borderBottomColor: tooltipBackground\n    },\n    \".cm-tooltip-autocomplete\": {\n        \"& > ul > li[aria-selected]\": {\n            backgroundColor: highlightBackground,\n            color: ivory\n        }\n    }\n}, { dark: true });\n/**\nThe highlighting style for code in the One Dark theme.\n*/\nconst oneDarkHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.keyword,\n        color: violet },\n    { tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],\n        color: coral },\n    { tag: [/*@__PURE__*/tags.function(tags.variableName), tags.labelName],\n        color: malibu },\n    { tag: [tags.color, /*@__PURE__*/tags.constant(tags.name), /*@__PURE__*/tags.standard(tags.name)],\n        color: whiskey },\n    { tag: [/*@__PURE__*/tags.definition(tags.name), tags.separator],\n        color: ivory },\n    { tag: [tags.typeName, tags.className, tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],\n        color: chalky },\n    { tag: [tags.operator, tags.operatorKeyword, tags.url, tags.escape, tags.regexp, tags.link, /*@__PURE__*/tags.special(tags.string)],\n        color: cyan },\n    { tag: [tags.meta, tags.comment],\n        color: stone },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.link,\n        color: stone,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        fontWeight: \"bold\",\n        color: coral },\n    { tag: [tags.atom, tags.bool, /*@__PURE__*/tags.special(tags.variableName)],\n        color: whiskey },\n    { tag: [tags.processingInstruction, tags.string, tags.inserted],\n        color: sage },\n    { tag: tags.invalid,\n        color: invalid },\n]);\n/**\nExtension to enable the One Dark theme (both the editor theme and\nthe highlight style).\n*/\nconst oneDark = [oneDarkTheme, /*@__PURE__*/syntaxHighlighting(oneDarkHighlightStyle)];\n\nexport { color, oneDark, oneDarkHighlightStyle, oneDarkTheme };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 9453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 9459, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/lang-javascript/dist/index.js"],"sourcesContent":["import { parser } from '@lezer/javascript';\nimport { syntaxTree, LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, defineLanguageFacet, sublanguageProp, LanguageSupport } from '@codemirror/language';\nimport { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\nimport { NodeWeakMap, IterMode } from '@lezer/common';\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"do {\\n\\t${}\\n} while (${})\", {\n        label: \"do\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"while (${}) {\\n\\t${}\\n}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"/ catch block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if (${}) {\\n\\t${}\\n} else {\\n\\t${}\\n}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n/**\nA collection of snippet completions for TypeScript. Includes the\nJavaScript [snippets](https://codemirror.net/6/docs/ref/#lang-javascript.snippets).\n*/\nconst typescriptSnippets = /*@__PURE__*/snippets.concat([\n    /*@__PURE__*/snippetCompletion(\"interface ${name} {\\n\\t${}\\n}\", {\n        label: \"interface\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"type ${name} = ${type}\", {\n        label: \"type\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"enum ${name} {\\n\\t${}\\n}\", {\n        label: \"enum\",\n        detail: \"definition\",\n        type: \"keyword\"\n    })\n]);\n\nconst cache = /*@__PURE__*/new NodeWeakMap();\nconst ScopeNodes = /*@__PURE__*/new Set([\n    \"Script\", \"Block\",\n    \"FunctionExpression\", \"FunctionDeclaration\", \"ArrowFunction\", \"MethodDeclaration\",\n    \"ForStatement\"\n]);\nfunction defID(type) {\n    return (node, def) => {\n        let id = node.node.getChild(\"VariableDefinition\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst functionContext = [\"FunctionDeclaration\"];\nconst gatherCompletions = {\n    FunctionDeclaration: /*@__PURE__*/defID(\"function\"),\n    ClassDeclaration: /*@__PURE__*/defID(\"class\"),\n    ClassExpression: () => true,\n    EnumDeclaration: /*@__PURE__*/defID(\"constant\"),\n    TypeAliasDeclaration: /*@__PURE__*/defID(\"type\"),\n    NamespaceDeclaration: /*@__PURE__*/defID(\"namespace\"),\n    VariableDefinition(node, def) { if (!node.matchContext(functionContext))\n        def(node, \"variable\"); },\n    TypeDefinition(node, def) { def(node, \"type\"); },\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(IterMode.IncludeAnonymous).iterate(node => {\n        if (top) {\n            top = false;\n        }\n        else if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def) || ScopeNodes.has(node.name))\n                return false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier = /^[\\w$\\xa1-\\uffff][\\w$\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\n    \"TemplateString\", \"String\", \"RegExp\",\n    \"LineComment\", \"BlockComment\",\n    \"VariableDefinition\", \"TypeDefinition\", \"Label\",\n    \"PropertyDefinition\", \"PropertyName\",\n    \"PrivatePropertyDefinition\", \"PrivatePropertyName\",\n    \".\", \"?.\"\n];\n/**\nCompletion source that looks up locally defined names in\nJavaScript code.\n*/\nfunction localCompletionSource(context) {\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.name == \"VariableName\" ||\n        inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier\n    };\n}\nfunction pathFor(read, member, name) {\n    var _a;\n    let path = [];\n    for (;;) {\n        let obj = member.firstChild, prop;\n        if ((obj === null || obj === void 0 ? void 0 : obj.name) == \"VariableName\") {\n            path.push(read(obj));\n            return { path: path.reverse(), name };\n        }\n        else if ((obj === null || obj === void 0 ? void 0 : obj.name) == \"MemberExpression\" && ((_a = (prop = obj.lastChild)) === null || _a === void 0 ? void 0 : _a.name) == \"PropertyName\") {\n            path.push(read(prop));\n            member = obj;\n        }\n        else {\n            return null;\n        }\n    }\n}\n/**\nHelper function for defining JavaScript completion sources. It\nreturns the completable name and object path for a completion\ncontext, or null if no name/property completion should happen at\nthat position. For example, when completing after `a.b.c` it will\nreturn `{path: [\"a\", \"b\"], name: \"c\"}`. When completing after `x`\nit will return `{path: [], name: \"x\"}`. When not in a property or\nname, it will return null if `context.explicit` is false, and\n`{path: [], name: \"\"}` otherwise.\n*/\nfunction completionPath(context) {\n    let read = (node) => context.state.doc.sliceString(node.from, node.to);\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (inner.name == \"PropertyName\") {\n        return pathFor(read, inner.parent, read(inner));\n    }\n    else if ((inner.name == \".\" || inner.name == \"?.\") && inner.parent.name == \"MemberExpression\") {\n        return pathFor(read, inner.parent, \"\");\n    }\n    else if (dontComplete.indexOf(inner.name) > -1) {\n        return null;\n    }\n    else if (inner.name == \"VariableName\" || inner.to - inner.from < 20 && Identifier.test(read(inner))) {\n        return { path: [], name: read(inner) };\n    }\n    else if (inner.name == \"MemberExpression\") {\n        return pathFor(read, inner, \"\");\n    }\n    else {\n        return context.explicit ? { path: [], name: \"\" } : null;\n    }\n}\nfunction enumeratePropertyCompletions(obj, top) {\n    let options = [], seen = new Set;\n    for (let depth = 0;; depth++) {\n        for (let name of (Object.getOwnPropertyNames || Object.keys)(obj)) {\n            if (!/^[a-zA-Z_$\\xaa-\\uffdc][\\w$\\xaa-\\uffdc]*$/.test(name) || seen.has(name))\n                continue;\n            seen.add(name);\n            let value;\n            try {\n                value = obj[name];\n            }\n            catch (_) {\n                continue;\n            }\n            options.push({\n                label: name,\n                type: typeof value == \"function\" ? (/^[A-Z]/.test(name) ? \"class\" : top ? \"function\" : \"method\")\n                    : top ? \"variable\" : \"property\",\n                boost: -depth\n            });\n        }\n        let next = Object.getPrototypeOf(obj);\n        if (!next)\n            return options;\n        obj = next;\n    }\n}\n/**\nDefines a [completion source](https://codemirror.net/6/docs/ref/#autocomplete.CompletionSource) that\ncompletes from the given scope object (for example `globalThis`).\nWill enter properties of the object when completing properties on\na directly-named path.\n*/\nfunction scopeCompletionSource(scope) {\n    let cache = new Map;\n    return (context) => {\n        let path = completionPath(context);\n        if (!path)\n            return null;\n        let target = scope;\n        for (let step of path.path) {\n            target = target[step];\n            if (!target)\n                return null;\n        }\n        let options = cache.get(target);\n        if (!options)\n            cache.set(target, options = enumeratePropertyCompletions(target, !path.path.length));\n        return {\n            from: context.pos - path.name.length,\n            options,\n            validFor: Identifier\n        };\n    };\n}\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"javascript\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => null,\n                \"Statement Property\": /*@__PURE__*/continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression ObjectType\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\nconst jsxSublanguage = {\n    test: node => /^JSX/.test(node.name),\n    facet: /*@__PURE__*/defineLanguageFacet({ commentTokens: { block: { open: \"{/*\", close: \"*/}\" } } })\n};\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"ts\" }, \"typescript\");\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n});\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({\n    dialect: \"jsx ts\",\n    props: [/*@__PURE__*/sublanguageProp.add(n => n.isTop ? [jsxSublanguage] : undefined)]\n}, \"typescript\");\nlet kwCompletion = (name) => ({ label: name, type: \"keyword\" });\nconst keywords = /*@__PURE__*/\"break case const continue default delete export extends false finally in instanceof let new return static super switch this throw true typeof var yield\".split(\" \").map(kwCompletion);\nconst typescriptKeywords = /*@__PURE__*/keywords.concat(/*@__PURE__*/[\"declare\", \"implements\", \"private\", \"protected\", \"public\"].map(kwCompletion));\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\nand local variable completion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    let completions = config.typescript ? typescriptSnippets.concat(typescriptKeywords) : snippets.concat(keywords);\n    return new LanguageSupport(lang, [\n        javascriptLanguage.data.of({\n            autocomplete: ifNotIn(dontComplete, completeFromList(completions))\n        }),\n        javascriptLanguage.data.of({\n            autocomplete: localCompletionSource\n        }),\n        config.jsx ? autoCloseTags : [],\n    ]);\n}\nfunction findOpenTag(node) {\n    for (;;) {\n        if (node.name == \"JSXOpenTag\" || node.name == \"JSXSelfClosingTag\" || node.name == \"JSXFragmentTag\")\n            return node;\n        if (node.name == \"JSXEscape\" || !node.parent)\n            return null;\n        node = node.parent;\n    }\n}\nfunction elementName(doc, tree, max = doc.length) {\n    for (let ch = tree === null || tree === void 0 ? void 0 : tree.firstChild; ch; ch = ch.nextSibling) {\n        if (ch.name == \"JSXIdentifier\" || ch.name == \"JSXBuiltin\" || ch.name == \"JSXNamespacedName\" ||\n            ch.name == \"JSXMemberExpression\")\n            return doc.sliceString(ch.from, Math.min(ch.to, max));\n    }\n    return \"\";\n}\nconst android = typeof navigator == \"object\" && /*@__PURE__*//Android\\b/.test(navigator.userAgent);\n/**\nExtension that will automatically insert JSX close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text, defaultInsert) => {\n    if ((android ? view.composing : view.compositionStarted) || view.state.readOnly ||\n        from != to || (text != \">\" && text != \"/\") ||\n        !javascriptLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let base = defaultInsert(), { state } = base;\n    let closeTags = state.changeByRange(range => {\n        var _a;\n        let { head } = range, around = syntaxTree(state).resolveInner(head - 1, -1), name;\n        if (around.name == \"JSXStartTag\")\n            around = around.parent;\n        if (state.doc.sliceString(head - 1, head) != text || around.name == \"JSXAttributeValue\" && around.to > head) ;\n        else if (text == \">\" && around.name == \"JSXFragmentTag\") {\n            return { range, changes: { from: head, insert: `</>` } };\n        }\n        else if (text == \"/\" && around.name == \"JSXStartCloseTag\") {\n            let empty = around.parent, base = empty.parent;\n            if (base && empty.from == head - 2 &&\n                ((name = elementName(state.doc, base.firstChild, head)) || ((_a = base.firstChild) === null || _a === void 0 ? void 0 : _a.name) == \"JSXFragmentTag\")) {\n                let insert = `${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length, -1), changes: { from: head, insert } };\n            }\n        }\n        else if (text == \">\") {\n            let openTag = findOpenTag(around);\n            if (openTag && openTag.name == \"JSXOpenTag\" &&\n                !/^\\/?>|^<\\//.test(state.doc.sliceString(head, head + 2)) &&\n                (name = elementName(state.doc, openTag, head)))\n                return { range, changes: { from: head, insert: `</${name}>` } };\n        }\n        return { range };\n    });\n    if (closeTags.changes.empty)\n        return false;\n    view.dispatch([\n        base,\n        state.update(closeTags, { userEvent: \"input.complete\", scrollIntoView: true })\n    ]);\n    return true;\n});\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The\n[eslint-linter-browserify](https://github.com/UziTech/eslint-linter-browserify)\npackage may help with that (see\n[example](https://github.com/UziTech/eslint-linter-browserify/blob/master/example/script.js)).\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"eslint:\" + input.ruleId : \"eslint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexport { autoCloseTags, completionPath, esLint, javascript, javascriptLanguage, jsxLanguage, localCompletionSource, scopeCompletionSource, snippets, tsxLanguage, typescriptLanguage, typescriptSnippets };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10045, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10051, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/lang-python/dist/index.js"],"sourcesContent":["import { parser } from '@lezer/python';\nimport { syntaxTree, LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { NodeWeakMap, IterMode } from '@lezer/common';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\n\nconst cache = /*@__PURE__*/new NodeWeakMap();\nconst ScopeNodes = /*@__PURE__*/new Set([\n    \"Script\", \"Body\",\n    \"FunctionDefinition\", \"ClassDefinition\", \"LambdaExpression\",\n    \"ForStatement\", \"MatchClause\"\n]);\nfunction defID(type) {\n    return (node, def, outer) => {\n        if (outer)\n            return false;\n        let id = node.node.getChild(\"VariableName\");\n        if (id)\n            def(id, type);\n        return true;\n    };\n}\nconst gatherCompletions = {\n    FunctionDefinition: /*@__PURE__*/defID(\"function\"),\n    ClassDefinition: /*@__PURE__*/defID(\"class\"),\n    ForStatement(node, def, outer) {\n        if (outer)\n            for (let child = node.node.firstChild; child; child = child.nextSibling) {\n                if (child.name == \"VariableName\")\n                    def(child, \"variable\");\n                else if (child.name == \"in\")\n                    break;\n            }\n    },\n    ImportStatement(_node, def) {\n        var _a, _b;\n        let { node } = _node;\n        let isFrom = ((_a = node.firstChild) === null || _a === void 0 ? void 0 : _a.name) == \"from\";\n        for (let ch = node.getChild(\"import\"); ch; ch = ch.nextSibling) {\n            if (ch.name == \"VariableName\" && ((_b = ch.nextSibling) === null || _b === void 0 ? void 0 : _b.name) != \"as\")\n                def(ch, isFrom ? \"variable\" : \"namespace\");\n        }\n    },\n    AssignStatement(node, def) {\n        for (let child = node.node.firstChild; child; child = child.nextSibling) {\n            if (child.name == \"VariableName\")\n                def(child, \"variable\");\n            else if (child.name == \":\" || child.name == \"AssignOp\")\n                break;\n        }\n    },\n    ParamList(node, def) {\n        for (let prev = null, child = node.node.firstChild; child; child = child.nextSibling) {\n            if (child.name == \"VariableName\" && (!prev || !/\\*|AssignOp/.test(prev.name)))\n                def(child, \"variable\");\n            prev = child;\n        }\n    },\n    CapturePattern: /*@__PURE__*/defID(\"variable\"),\n    AsPattern: /*@__PURE__*/defID(\"variable\"),\n    __proto__: null\n};\nfunction getScope(doc, node) {\n    let cached = cache.get(node);\n    if (cached)\n        return cached;\n    let completions = [], top = true;\n    function def(node, type) {\n        let name = doc.sliceString(node.from, node.to);\n        completions.push({ label: name, type });\n    }\n    node.cursor(IterMode.IncludeAnonymous).iterate(node => {\n        if (node.name) {\n            let gather = gatherCompletions[node.name];\n            if (gather && gather(node, def, top) || !top && ScopeNodes.has(node.name))\n                return false;\n            top = false;\n        }\n        else if (node.to - node.from > 8192) {\n            // Allow caching for bigger internal nodes\n            for (let c of getScope(doc, node.node))\n                completions.push(c);\n            return false;\n        }\n    });\n    cache.set(node, completions);\n    return completions;\n}\nconst Identifier = /^[\\w\\xa1-\\uffff][\\w\\d\\xa1-\\uffff]*$/;\nconst dontComplete = [\"String\", \"FormatString\", \"Comment\", \"PropertyName\"];\n/**\nCompletion source that looks up locally defined names in\nPython code.\n*/\nfunction localCompletionSource(context) {\n    let inner = syntaxTree(context.state).resolveInner(context.pos, -1);\n    if (dontComplete.indexOf(inner.name) > -1)\n        return null;\n    let isWord = inner.name == \"VariableName\" ||\n        inner.to - inner.from < 20 && Identifier.test(context.state.sliceDoc(inner.from, inner.to));\n    if (!isWord && !context.explicit)\n        return null;\n    let options = [];\n    for (let pos = inner; pos; pos = pos.parent) {\n        if (ScopeNodes.has(pos.name))\n            options = options.concat(getScope(context.state.doc, pos));\n    }\n    return {\n        options,\n        from: isWord ? inner.from : context.pos,\n        validFor: Identifier\n    };\n}\nconst globals = /*@__PURE__*/[\n    \"__annotations__\", \"__builtins__\", \"__debug__\", \"__doc__\", \"__import__\", \"__name__\",\n    \"__loader__\", \"__package__\", \"__spec__\",\n    \"False\", \"None\", \"True\"\n].map(n => ({ label: n, type: \"constant\" })).concat(/*@__PURE__*/[\n    \"ArithmeticError\", \"AssertionError\", \"AttributeError\", \"BaseException\", \"BlockingIOError\",\n    \"BrokenPipeError\", \"BufferError\", \"BytesWarning\", \"ChildProcessError\", \"ConnectionAbortedError\",\n    \"ConnectionError\", \"ConnectionRefusedError\", \"ConnectionResetError\", \"DeprecationWarning\",\n    \"EOFError\", \"Ellipsis\", \"EncodingWarning\", \"EnvironmentError\", \"Exception\", \"FileExistsError\",\n    \"FileNotFoundError\", \"FloatingPointError\", \"FutureWarning\", \"GeneratorExit\", \"IOError\",\n    \"ImportError\", \"ImportWarning\", \"IndentationError\", \"IndexError\", \"InterruptedError\",\n    \"IsADirectoryError\", \"KeyError\", \"KeyboardInterrupt\", \"LookupError\", \"MemoryError\",\n    \"ModuleNotFoundError\", \"NameError\", \"NotADirectoryError\", \"NotImplemented\", \"NotImplementedError\",\n    \"OSError\", \"OverflowError\", \"PendingDeprecationWarning\", \"PermissionError\", \"ProcessLookupError\",\n    \"RecursionError\", \"ReferenceError\", \"ResourceWarning\", \"RuntimeError\", \"RuntimeWarning\",\n    \"StopAsyncIteration\", \"StopIteration\", \"SyntaxError\", \"SyntaxWarning\", \"SystemError\",\n    \"SystemExit\", \"TabError\", \"TimeoutError\", \"TypeError\", \"UnboundLocalError\", \"UnicodeDecodeError\",\n    \"UnicodeEncodeError\", \"UnicodeError\", \"UnicodeTranslateError\", \"UnicodeWarning\", \"UserWarning\",\n    \"ValueError\", \"Warning\", \"ZeroDivisionError\"\n].map(n => ({ label: n, type: \"type\" }))).concat(/*@__PURE__*/[\n    \"bool\", \"bytearray\", \"bytes\", \"classmethod\", \"complex\", \"float\", \"frozenset\", \"int\", \"list\",\n    \"map\", \"memoryview\", \"object\", \"range\", \"set\", \"staticmethod\", \"str\", \"super\", \"tuple\", \"type\"\n].map(n => ({ label: n, type: \"class\" }))).concat(/*@__PURE__*/[\n    \"abs\", \"aiter\", \"all\", \"anext\", \"any\", \"ascii\", \"bin\", \"breakpoint\", \"callable\", \"chr\",\n    \"compile\", \"delattr\", \"dict\", \"dir\", \"divmod\", \"enumerate\", \"eval\", \"exec\", \"exit\", \"filter\",\n    \"format\", \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\", \"input\", \"isinstance\",\n    \"issubclass\", \"iter\", \"len\", \"license\", \"locals\", \"max\", \"min\", \"next\", \"oct\", \"open\",\n    \"ord\", \"pow\", \"print\", \"property\", \"quit\", \"repr\", \"reversed\", \"round\", \"setattr\", \"slice\",\n    \"sorted\", \"sum\", \"vars\", \"zip\"\n].map(n => ({ label: n, type: \"function\" })));\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"def ${name}(${params}):\\n\\t${}\", {\n        label: \"def\",\n        detail: \"function\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for ${name} in ${collection}:\\n\\t${}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"while ${}:\\n\\t${}\", {\n        label: \"while\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try:\\n\\t${}\\nexcept ${error}:\\n\\t${}\", {\n        label: \"try\",\n        detail: \"/ except block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if ${}:\\n\\t\\n\", {\n        label: \"if\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"if ${}:\\n\\t${}\\nelse:\\n\\t${}\", {\n        label: \"if\",\n        detail: \"/ else block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name}:\\n\\tdef __init__(self, ${params}):\\n\\t\\t\\t${}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${module}\", {\n        label: \"import\",\n        detail: \"statement\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"from ${module} import ${names}\", {\n        label: \"from\",\n        detail: \"import\",\n        type: \"keyword\"\n    })\n];\n/**\nAutocompletion for built-in Python globals and keywords.\n*/\nconst globalCompletion = /*@__PURE__*/ifNotIn(dontComplete, /*@__PURE__*/completeFromList(/*@__PURE__*/globals.concat(snippets)));\n\nfunction innerBody(context) {\n    let { node, pos } = context;\n    let lineIndent = context.lineIndent(pos, -1);\n    let found = null;\n    for (;;) {\n        let before = node.childBefore(pos);\n        if (!before) {\n            break;\n        }\n        else if (before.name == \"Comment\") {\n            pos = before.from;\n        }\n        else if (before.name == \"Body\") {\n            if (context.baseIndentFor(before) + context.unit <= lineIndent)\n                found = before;\n            node = before;\n        }\n        else if (before.type.is(\"Statement\")) {\n            node = before;\n        }\n        else {\n            break;\n        }\n    }\n    return found;\n}\nfunction indentBody(context, node) {\n    let base = context.baseIndentFor(node);\n    let line = context.lineAt(context.pos, -1), to = line.from + line.text.length;\n    // Don't consider blank, deindented lines at the end of the\n    // block part of the block\n    if (/^\\s*($|#)/.test(line.text) &&\n        context.node.to < to + 100 &&\n        !/\\S/.test(context.state.sliceDoc(to, context.node.to)) &&\n        context.lineIndent(context.pos, -1) <= base)\n        return null;\n    // A normally deindenting keyword that appears at a higher\n    // indentation than the block should probably be handled by the next\n    // level\n    if (/^\\s*(else:|elif |except |finally:)/.test(context.textAfter) && context.lineIndent(context.pos, -1) > base)\n        return null;\n    return base + context.unit;\n}\n/**\nA language provider based on the [Lezer Python\nparser](https://github.com/lezer-parser/python), extended with\nhighlighting and indentation information.\n*/\nconst pythonLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"python\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Body: context => {\n                    var _a;\n                    let inner = innerBody(context);\n                    return (_a = indentBody(context, inner || context.node)) !== null && _a !== void 0 ? _a : context.continue();\n                },\n                IfStatement: cx => /^\\s*(else:|elif )/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                \"ForStatement WhileStatement\": cx => /^\\s*else:/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                TryStatement: cx => /^\\s*(except |finally:|else:)/.test(cx.textAfter) ? cx.baseIndent : cx.continue(),\n                \"TupleExpression ComprehensionExpression ParamList ArgList ParenthesizedExpression\": /*@__PURE__*/delimitedIndent({ closing: \")\" }),\n                \"DictionaryExpression DictionaryComprehensionExpression SetExpression SetComprehensionExpression\": /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                \"ArrayExpression ArrayComprehensionExpression\": /*@__PURE__*/delimitedIndent({ closing: \"]\" }),\n                \"String FormatString\": () => null,\n                Script: context => {\n                    var _a;\n                    let inner = innerBody(context);\n                    return (_a = (inner && indentBody(context, inner))) !== null && _a !== void 0 ? _a : context.continue();\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"ArrayExpression DictionaryExpression SetExpression TupleExpression\": foldInside,\n                Body: (node, state) => ({ from: node.from + 1, to: node.to - (node.to == state.doc.length ? 0 : 1) })\n            })\n        ],\n    }),\n    languageData: {\n        closeBrackets: {\n            brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"'],\n            stringPrefixes: [\"f\", \"fr\", \"rf\", \"r\", \"u\", \"b\", \"br\", \"rb\",\n                \"F\", \"FR\", \"RF\", \"R\", \"U\", \"B\", \"BR\", \"RB\"]\n        },\n        commentTokens: { line: \"#\" },\n        indentOnInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/\n    }\n});\n/**\nPython language support.\n*/\nfunction python() {\n    return new LanguageSupport(pythonLanguage, [\n        pythonLanguage.data.of({ autocomplete: localCompletionSource }),\n        pythonLanguage.data.of({ autocomplete: globalCompletion }),\n    ]);\n}\n\nexport { globalCompletion, localCompletionSource, python, pythonLanguage };\n"],"names":[],"mappings":"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","ignoreList":[0]}},
    {"offset": {"line": 10511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10517, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/lang-java/dist/index.js"],"sourcesContent":["import { parser } from '@lezer/java';\nimport { LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nA language provider based on the [Lezer Java\nparser](https://github.com/lezer-parser/java), extended with\nhighlighting and indentation information.\n*/\nconst javaLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"java\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch|finally)\\b/ }),\n                LabeledStatement: flatIndent,\n                SwitchBlock: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                BlockComment: () => null,\n                Statement: /*@__PURE__*/continuedIndent({ except: /^{/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                [\"Block SwitchBlock ClassBody ElementValueArrayInitializer ModuleBody EnumBody \" +\n                    \"ConstructorBody InterfaceBody ArrayInitializer\"]: foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\})$/\n    }\n});\n/**\nJava language support.\n*/\nfunction java() {\n    return new LanguageSupport(javaLanguage);\n}\n\nexport { java, javaLanguage };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA;;;;AAIA,GACA,MAAM,eAAe,WAAW,GAAE,yJAAA,CAAA,aAAU,CAAC,MAAM,CAAC;IAChD,MAAM;IACN,QAAQ,WAAW,GAAE,gJAAA,CAAA,SAAM,CAAC,SAAS,CAAC;QAClC,OAAO;YACH,WAAW,GAAE,yJAAA,CAAA,iBAAc,CAAC,GAAG,CAAC;gBAC5B,aAAa,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAAiB;gBACrE,cAAc,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAA0B;gBAC/E,kBAAkB,yJAAA,CAAA,aAAU;gBAC5B,aAAa,CAAA;oBACT,IAAI,QAAQ,QAAQ,SAAS,EAAE,SAAS,SAAS,IAAI,CAAC,QAAQ,SAAS,uBAAuB,IAAI,CAAC;oBACnG,OAAO,QAAQ,UAAU,GAAG,CAAC,SAAS,IAAI,SAAS,IAAI,CAAC,IAAI,QAAQ,IAAI;gBAC5E;gBACA,OAAO,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,SAAS;gBAAI;gBACnD,cAAc,IAAM;gBACpB,WAAW,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAAK;YAC3D;YACA,WAAW,GAAE,yJAAA,CAAA,eAAY,CAAC,GAAG,CAAC;gBAC1B,CAAC,kFACG,iDAAiD,EAAE,yJAAA,CAAA,aAAU;gBACjE,cAAa,IAAI;oBAAI,OAAO;wBAAE,MAAM,KAAK,IAAI,GAAG;wBAAG,IAAI,KAAK,EAAE,GAAG;oBAAE;gBAAG;YAC1E;SACH;IACL;IACA,cAAc;QACV,eAAe;YAAE,MAAM;YAAM,OAAO;gBAAE,MAAM;gBAAM,OAAO;YAAK;QAAE;QAChE,eAAe;IACnB;AACJ;AACA;;AAEA,GACA,SAAS;IACL,OAAO,IAAI,yJAAA,CAAA,kBAAe,CAAC;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 10581, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 10587, "column": 0}, "map": {"version":3,"sources":["file:///Users/praveenkumargangapuram/Desktop/Projects/studPro/frontend/studpro/node_modules/%40codemirror/lang-cpp/dist/index.js"],"sourcesContent":["import { parser } from '@lezer/cpp';\nimport { LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\n\n/**\nA language provider based on the [Lezer C++\nparser](https://github.com/lezer-parser/cpp), extended with\nhighlighting and indentation information.\n*/\nconst cppLanguage = /*@__PURE__*/LRLanguage.define({\n    name: \"cpp\",\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch)\\b/ }),\n                LabeledStatement: flatIndent,\n                CaseStatement: context => context.baseIndent + context.unit,\n                BlockComment: () => null,\n                CompoundStatement: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                Statement: /*@__PURE__*/continuedIndent({ except: /^{/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"DeclarationList CompoundStatement EnumeratorList FieldDeclarationList InitializerList\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\})$/,\n        closeBrackets: { stringPrefixes: [\"L\", \"u\", \"U\", \"u8\", \"LR\", \"UR\", \"uR\", \"u8R\", \"R\"] }\n    }\n});\n/**\nLanguage support for C++.\n*/\nfunction cpp() {\n    return new LanguageSupport(cppLanguage);\n}\n\nexport { cpp, cppLanguage };\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEA;;;;AAIA,GACA,MAAM,cAAc,WAAW,GAAE,yJAAA,CAAA,aAAU,CAAC,MAAM,CAAC;IAC/C,MAAM;IACN,QAAQ,WAAW,GAAE,+IAAA,CAAA,SAAM,CAAC,SAAS,CAAC;QAClC,OAAO;YACH,WAAW,GAAE,yJAAA,CAAA,iBAAc,CAAC,GAAG,CAAC;gBAC5B,aAAa,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAAiB;gBACrE,cAAc,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAAkB;gBACvE,kBAAkB,yJAAA,CAAA,aAAU;gBAC5B,eAAe,CAAA,UAAW,QAAQ,UAAU,GAAG,QAAQ,IAAI;gBAC3D,cAAc,IAAM;gBACpB,mBAAmB,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,SAAS;gBAAI;gBAC/D,WAAW,WAAW,GAAE,CAAA,GAAA,yJAAA,CAAA,kBAAe,AAAD,EAAE;oBAAE,QAAQ;gBAAK;YAC3D;YACA,WAAW,GAAE,yJAAA,CAAA,eAAY,CAAC,GAAG,CAAC;gBAC1B,yFAAyF,yJAAA,CAAA,aAAU;gBACnG,cAAa,IAAI;oBAAI,OAAO;wBAAE,MAAM,KAAK,IAAI,GAAG;wBAAG,IAAI,KAAK,EAAE,GAAG;oBAAE;gBAAG;YAC1E;SACH;IACL;IACA,cAAc;QACV,eAAe;YAAE,MAAM;YAAM,OAAO;gBAAE,MAAM;gBAAM,OAAO;YAAK;QAAE;QAChE,eAAe;QACf,eAAe;YAAE,gBAAgB;gBAAC;gBAAK;gBAAK;gBAAK;gBAAM;gBAAM;gBAAM;gBAAM;gBAAO;aAAI;QAAC;IACzF;AACJ;AACA;;AAEA,GACA,SAAS;IACL,OAAO,IAAI,yJAAA,CAAA,kBAAe,CAAC;AAC/B","ignoreList":[0]}},
    {"offset": {"line": 10661, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}